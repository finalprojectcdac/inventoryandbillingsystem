{"version":3,"sources":["pages/404Page.jsx","components/poc-components/Table.jsx","service/serviceLayer.js","components/inv-components/SupplierForm.jsx","components/inv-components/InvForm.jsx","components/inv-components/MainButton.jsx","components/poc-components/TestForm.jsx","auth-directory/auth.js","components/general-components/HorizontalNavbar.jsx","components/login-components/Login.jsx","pages/LoginPage.jsx","components/general-components/VerticalNavbar.jsx","components/inv-components/RtdBar.jsx","components/inv-components/InvTable.jsx","components/inv-components/TotalTable.jsx","pages/InventoryPage.jsx","components/billing-components/BillForm.jsx","components/billing-components/BillTable.jsx","components/billing-components/CustomerForm.jsx","components/billing-components/TotalTable.jsx","components/billing-components/RtdBar.jsx","components/billing-components/MainButton.jsx","pages/BillingPage.jsx","pages/LogoutPage.jsx","components/monitoring-components/RtdBar.jsx","components/monitoring-components/PurchaseReport.jsx","components/monitoring-components/SalesReport.jsx","components/monitoring-components/SearchReportForm.jsx","components/monitoring-components/InventoryItemTable.jsx","components/monitoring-components/UpdateForm.jsx","components/monitoring-components/employee-components/UserTable.jsx","components/monitoring-components/employee-components/SetEmployeeForm.jsx","components/monitoring-components/Options.jsx","pages/MonitoringPage.jsx","auth-directory/ProtectedRoute.jsx","pages/HomePage.jsx","components/login-components/Welcome.jsx","pages/WelcomePage.jsx","components/login-components/Register.jsx","pages/RegisterPage.jsx","components/App.jsx","index.js"],"names":["NotFoundPage","Table","striped","bordered","hover","a","map","index","name","mobile","city","axios","get","item_code","console","log","supplier_name","inventoryDetails","put","supplierobj","arrayofRPD","mobile_no","arrayOfItemSaleObjects","invoice","arrayOfQuantityUpdate","details","startDate","endDate","empDetails","empId","password","supplierObj","SupplierForm","useState","supplier_code","supplier_invoice_number","supplier_invoice_value","purchase_date","setDetails","fieldDisabled","setFieldDisabled","handleChange","event","target","value","prevValue","Date","getFullYear","toString","getMonth","getDate","className","style","textAlign","paddingTop","width","paddingLeft","for","type","class","id","placeholder","onBlur","user","getSupplierDetails","then","resp","data","contentsupplier","status","preventDefault","onChange","disabled","onblur","paddingBottom","onClick","isAnyEmpty","obj","arr","key","push","undefined","includes","checkObjectisFilled","Alert","error","success","marginLeft","prvQuantityDetails","retailDataArray","sumOfQuantity","totalAmount","InvForm","props","quantity","quantitydetails","setquantity","selling_price","reatailPriceDetails","setRetailPriceDetails","brand","item_name","unit_measurement","stock_entry_date","item_category","supplier_invoice_no","unit_price","total_value","getItemDetails","content","toFixed","isAllNotFilled","onAdd","i","length","parseInt","parseFloat","MainButton","matchQuantityandValue","j","x","insertInventoryData","y","insertSupplierDetails","z","insertListofRetailPriceData","TestForm","ReactDOM","render","document","getElementById","putuser","this","authenticated","admin","cb","HorizontalNavbar","history","useHistory","fontFamily","fontSize","auth","logout","hidden","isAuthenticated","Login","username","loginDetails","setLoginDetails","color","login","privilege","employee","setAdmin","isPrivileged","unsetAdmin","to","LoginPage","VerticalNavbar","textDecoration","RtdBar","totalNoOfItems","totalItemValue","today","toLocaleDateString","now","toLocaleTimeString","date","setDate","time","setTime","setInterval","newDate","newTime","padding","InvTable","tableRows","scope","TotalTable","height","left","top","InventoryPage","setTableRows","rtd","setRtd","useEffect","getRealTimeData","userName","prevRows","itemsSoldList","BillForm","invoice_no","billNo","updateObject","setUpdateObject","isFound","setIsFound","disableAddButton","setDisableAddButton","getQuantityAndPrice","getItemDetailsForSale","bo","alert","item","quantity_sold","BillTable","customer_name","invoice_value","email_id","billing_date","CustomerForm","customerDetails","setCustomerDetails","getCustomerDetails","contentinvoice","itemPrice","quantityAndPrice","availableQuantity","insertListOfItems","insertInvoice","updateItemQuantity","BillingPage","setBillNo","getSaleInvoiceNo","rsp","setQuantityAndPrice","LogoutPage","todaysSale","noOfItemsWithoutSp","PurchaseReport","hidePurchaseTable","purchaseReport","supplier","SalesReport","hideSalesTable","salesReport","customer","SearchReportForm","reportType","setReportType","setStartDate","setEndDate","setHidePurchaseTable","setHideSalesTable","setPurchaseReport","setSalesReport","reportOpen","setReportOpen","clearTable","position","selected","dateFormat","maxDate","showYearDropdown","scrollableMonthYearDropdown","sd","ed","getPruchaseReport","supplierdtls","getSalesReport","invoiceList","InventoryItemTable","UpdateForm","itemDetails","setItemDetails","resp1","resp2","status1","status2","updateInventoryAndSellingPriceData","reason","UserTable","email","SetEmployeeForm","setEmpDetails","getEmployeeDetails","list","bottom","updateEmployeeDetails","Options","MonitoringPage","totalValueofInvoices","totalNoOfItemsWithoutSp","getArrayOfBillingObject","setArrayOfBillingObject","billingObjList","getListOfEmployees","setArrayOfEmpObject","empList","arrayOfBillingObject","arrayOfEmpObject","path","ProtectedRoute","Component","component","rest","goBack","HomePage","src","Welcome","WelcomePage","Register","confirmPassword","setConfirmPassword","registerEmployee","RegisterPage","App","exact","PageNotFound","stack","limit","timeout","effect","offset"],"mappings":"uMAUeA,MARf,WACE,OACE,8BACE,+D,gBC8BSC,MA9Bf,WAYI,OACI,8BACI,eAAC,IAAD,CAAsBC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACJ,gCACE,+BACE,sCACA,wCACA,2CAGJ,gCACGC,EAAEC,KArBW,SAACD,EAAEE,GACvB,OACI,+BACI,6BAAKF,EAAEG,OACP,6BAAKH,EAAEI,SACP,6BAAKJ,EAAEK,qB,iCC6IJ,M,+FA1Ib,WACE,OAAOC,IAAMC,IAAI,uD,4BAKnB,SAAeC,GAEb,OADAC,QAAQC,IAAI,kCAAoCF,GACzCF,IAAMC,IACX,iFACEC,K,gCAGN,SAAmBG,GACjB,OAAOL,IAAMC,IACX,wFACEI,K,iCAKN,SAAoBC,GAClB,OAAON,IAAMO,IACX,sDACAD,K,mCAGJ,SAAsBE,GAEpB,OADAL,QAAQC,IAAII,GACLR,IAAMO,IACX,wEACAC,K,yCAGJ,SAA4BC,GAE1B,OADAN,QAAQC,IAAIK,GACLT,IAAMO,IACX,8DACAE,K,8BAMJ,WACE,OAAOT,IAAMC,IAAI,6D,mCAGnB,SAAsBC,GACpB,OAAOF,IAAMC,IACX,qEAAuEC,K,gCAG3E,SAAmBQ,GACjB,OAAOV,IAAMC,IACX,8EACES,K,qCAGN,WACE,OAAOV,IAAMC,IAAI,+D,+BAGnB,SAAkBU,GAChB,OAAOX,IAAMO,IACX,8DACAI,K,2BAIJ,SAAcC,GACZ,OAAOZ,IAAMO,IACX,8DACAK,K,gCAGJ,SAAmBC,GACjB,OAAOb,IAAMO,IACX,uDACAM,K,gDAMJ,SAAmCC,GAEjC,OADAX,QAAQC,IAAIU,GACLd,IAAMO,IACX,mEACAO,K,+BAGJ,SAAkBC,EAAWC,GAG3B,OAFAb,QAAQC,IAAIW,GACZZ,QAAQC,IAAIY,GACLhB,IAAMC,IACX,iEACEc,EACA,YACAC,K,4BAGN,SAAeD,EAAWC,GAGxB,OAFAb,QAAQC,IAAIW,GACZZ,QAAQC,IAAIY,GACLhB,IAAMC,IACX,8DACEc,EACA,YACAC,K,8BAIN,SAAiBC,GACf,OAAOjB,IAAMO,IAAI,qDAAsDU,K,gCAGzE,SAAmBC,GACjB,OAAOlB,IAAMC,IAAI,8DAAgEiB,K,mCAGnF,SAAsBD,GACpB,OAAOjB,IAAMO,IAAI,0DAA2DU,K,gCAG9E,WACE,OAAOjB,IAAMC,IAAI,0D,mBAGnB,SAAMiB,EAAOC,GACX,OAAOnB,IAAMC,IACX,iDAAmDiB,EAAQ,aAAeC,O,6CC7I5EC,EAAc,GAuNHC,MArNf,WAAyB,IAAD,EACQC,mBAAS,CACrCjB,cAAe,GACfkB,cAAe,GACfC,wBAAyB,GACzBC,uBAAwB,GACxBC,cAAe,KANK,mBACfZ,EADe,KACNa,EADM,OASoBL,oBAAS,GAT7B,mBASfM,EATe,KASAC,EATA,KAWtB,SAASC,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MAEZN,EADW,kBAAT9B,GAAqC,IAAToC,EACnB,CACT5B,cAAe,GACfkB,cAAe,GACfC,wBAAyB,GACzBC,uBAAwB,GACxBC,cAAe,IAGN,SAACQ,GAAe,IAAD,EACxB,OAAO,2BACFA,GADL,uBAEGrC,EAAOoC,GAFV,+BAII,IAAIE,MAAOC,cAAcC,WACzB,MACC,IAAIF,MAAOG,WAAa,GAAGD,WAC5B,KACA,IAAIF,MAAOI,UAAUF,YARzB,MAvBgB,MA2ClBjB,EA+EJ,OA1HsB,EAsCpBG,cAtCoB,EAuCpBlB,cAvCoB,EAwCpBmB,wBAxCoB,EAyCpBC,uBAzCoB,EA0CpBC,cAiFA,sBAAKc,UAAU,oBAAf,UACE,mBACEA,UAAU,aACVC,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAF5C,8BAMA,sBAAMF,MAAO,CAAEG,MAAO,OAAtB,SACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACLsD,OAlDZ,SAAoBpB,GAClB,IAAM1B,EAAgBS,EAAQT,cAC9BF,QAAQC,IACN,kDAAoDC,GAEtD+C,EAAKC,mBAAmBhD,GAAeiD,MAAK,SAACC,GAAU,IAAD,EAMhDA,EAAKC,KAAKC,gBAJZpD,EAFkD,EAElDA,cACAkB,EAHkD,EAGlDA,cAHkD,EAIlDC,wBAJkD,EAKlDC,uBAEFtB,QAAQC,IAAI,wBAA0BmD,EAAKC,MAE5B,IADAD,EAAKC,KAAKE,OAEvB/B,EAAW,CACTtB,cAAeA,EACfkB,cAAeA,EACfC,wBAAyB,GACzBC,uBAAwB,GACxBC,cAAe,KAEZvB,QAAQC,IAAI,uCAErB2B,EAAM4B,kBA2BIC,SAAU9B,EACVG,MAAOnB,EAAQT,cACfwD,SAAUjC,OAGd,sBAAKoB,MAAM,sBAAX,UACE,uBAAOF,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAOnB,EAAQS,cACfsC,SAAUjC,OAGd,sBAAKY,UAAU,sBAAf,UACE,uBAAOM,IAAI,iBAAX,4BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,iBACHC,YAAY,iBACZrD,KAAK,0BACL+D,SAAU9B,EACVG,MAAOnB,EAAQU,wBACfqC,SAAUjC,OAGd,sBAAKY,UAAU,sBAAf,UACE,uBAAOM,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,yBACL+D,SAAU9B,EACVgC,OAjEZ,WACsBhD,EAAQW,wBAiElBQ,MAAOnB,EAAQW,uBACfoC,SAAUjC,YAKlB,sBAAKa,MAAO,CAAEI,YAAa,QAASkB,cAAe,QAAnD,UACE,wBACEf,MAAM,0BACND,KAAK,SACLiB,QAtIR,SAAmBjC,GACjB,IAAMkC,EAhBR,SAA6BC,GAC3B,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAOF,EACdC,EAAIE,UAAkBC,IAAbJ,EAAIE,IAAmC,OAAbF,EAAIE,IAA8B,KAAbF,EAAIE,IAE9D,OAAOD,EAAII,UAAS,GAWDC,CAAoB1D,GACvCX,QAAQC,IAAI,qCAAuC6D,GACvCA,EAPVQ,IAAMC,MAAM,mDACTD,IAAME,QAAQ,gCAOdV,IACH7C,EAAcN,EACdX,QAAQC,IAAI,qCACZD,QAAQC,IAAIgB,GACZO,EAAW,CACTtB,cAAeS,EAAQT,cACvBkB,cAAeT,EAAQS,cACvBC,wBAAyBV,EAAQU,wBACjCC,uBAAwBX,EAAQW,uBAChCC,cAAeZ,EAAQY,gBAEzBG,GAAiB,IAGnBE,EAAM4B,kBAqHAE,SAAUjC,EAJZ,iBAQA,wBACEoB,MAAM,0BACND,KAAK,SACLiB,QAzHR,WACEnC,GAAiB,GACjBF,EAAW,CACTtB,cAAe,GACfkB,cAAe,GACfC,wBAAyB,GACzBC,uBAAwB,GACxBC,cAAe,MAmHXe,MAAO,CAAEmC,WAAY,QAJvB,yBCzMFtE,EAAmB,GACnBuE,EAAqB,GACrBC,EAAkB,GACpBC,EAAgB,EAChBC,EAAc,EAwWHC,MAtWf,SAAiBC,GAAQ,IAAD,EACiB5D,mBAAS,CAC9CpB,UAAW,GACXiF,SAAU,KAHU,mBACfC,EADe,KACEC,EADF,OAMoB/D,oBAAS,GAN7B,mBAMAO,GANA,aAQ+BP,mBAAS,CAC5DpB,UAAW,GACXoF,cAAe,IAVK,mBAQfC,EARe,KAQMC,EARN,OAaQlE,mBAAS,CACrCpB,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,cAAe,GACfC,oBAAqB,GACrBC,WAAY,GACZC,YAAa,GACbb,SAAU,KAvBU,mBAafrE,EAbe,KAaNa,EAbM,KA0BtB,SAASG,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MAEZN,EADW,cAAT9B,GAAkC,KAAVoC,EACf,CACT/B,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,cAAe,GACfC,oBAAqB,GACrBC,WAAY,GACZC,YAAa,GACbb,SAAU,IAGD,SAACjD,GAAe,IAAD,EACxB,OAAO,2BACFA,GADL,uBAEGrC,EAAOoC,GAFV,kCAII,IAAIE,MAAOC,cAAcC,WACzB,MACC,IAAIF,MAAOG,WAAa,GAAGD,WAC5B,KACA,IAAIF,MAAOI,UAAUF,YARzB,oCASuBjB,EAAYI,yBATnC,MAuKN,OACE,sBAAKgB,UAAU,eAAf,UACE,mBACEA,UAAU,aACVC,MAAK,aAAIC,UAAW,SAAUC,WAAY,OAArC,aAAwD,QAF/D,6BAMA,uBAAMF,MAAO,CAAEG,MAAO,OAAtB,UACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACLsD,OAvIZ,SAAoBpB,GAClB,IAAM7B,EAAY6B,EAAMC,OAAOC,MAEb,IAAd/B,IACFC,QAAQC,IAAI,4BAA8BF,GAC1CkD,EAAK6C,eAAe/F,GAAWoD,MAAK,SAACC,GAEnC,GAAe,IADAA,EAAKC,KAAKE,OACP,CAAC,IAAD,EAWZH,EAAKC,KAAK0C,QATZhG,EAFc,EAEdA,UACAuF,EAHc,EAGdA,MACAC,EAJc,EAIdA,UACAC,EALc,EAKdA,iBACAE,EANc,EAMdA,cACAE,EAPc,EAOdA,WACAZ,EARc,EAQdA,SARc,EASdW,oBATc,EAUdF,iBAEFzF,QAAQC,IAAImD,EAAKC,KAAK0C,QAAQR,WAE9BL,EAAY,CACVnF,UAAWA,EACXiF,SAAUA,IAEZK,EAAsB,CACpBtF,UAAWA,EACXoF,cAAe,IAEjB3D,EAAW,CACTzB,UAAWA,EACXuF,MAAOA,EACPC,UAAWA,EACXC,iBAAkBA,EAClBE,cAAeA,EACfE,WAAYA,EACZC,YAAa,GACbb,SAAU,GACVW,oBAAqB,GACrBF,iBAAkB,UAGpBjE,EAAW,CACTzB,UAAWA,EACXuF,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,cAAe,GACfC,oBAAqB,GACrBC,WAAY,GACZC,YAAa,GACbb,SAAU,KAEZK,EAAsB,CACpBtF,UAAWA,EACXoF,eAAgB,IAIpBnF,QAAQC,IAAI,qBACZD,QAAQC,IAAIU,QA2EN8C,SAAU9B,EACVG,MAAOnB,EAAQZ,eAGnB,sBAAK8C,MAAM,sBAAX,UACE,uBAAOF,IAAI,QAAX,mBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,QACHC,YAAY,QACZrD,KAAK,QACL+D,SAAU9B,EACVG,MAAOnB,EAAQ2E,WAGnB,sBAAKjD,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACL+D,SAAU9B,EACVG,MAAOnB,EAAQ4E,eAGnB,sBAAKlD,UAAU,sBAAf,UACE,uBAAOM,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAOnB,EAAQ+E,sBAIrB,sBACErD,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKG,MAAM,sBAAX,UACE,uBAAOF,IAAI,MAAX,iCACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,MACHC,YAAY,sBACZrD,KAAK,mBACL+D,SAAU9B,EACVG,MAAOnB,EAAQ6E,sBAGnB,sBAAKnD,UAAU,sBAAf,UACE,uBAAOM,IAAI,WAAX,sBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,WACHC,YAAY,WACZrD,KAAK,WAEL+D,SAAU9B,EACVG,MAAOnB,EAAQqE,cAGnB,sBAAKnC,MAAM,sBAAX,UACE,uBAAOF,IAAI,YAAX,wBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,aACZrD,KAAK,aACL+D,SAAU9B,EACVG,MAAOnB,EAAQiF,gBAGnB,sBAAK/C,MAAM,sBAAX,UACE,uBAAOF,IAAI,cAAX,yBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,cACHC,YAAY,cACZrD,KAAK,cACLoC,MACGnB,EAAQkF,aACPlF,EAAQiF,WAAajF,EAAQqE,UAC7BgB,QAAQ,cAMpB,sBAAK1D,MAAO,CAAEI,YAAa,QAASkB,cAAe,QAAnD,UACE,wBACEf,MAAM,0BACND,KAAK,SACLiB,QAtKR,SAAmBjC,GAPgB,KAA7BqD,EAAgBD,UAClBN,EAAmBR,KAAKe,GAGtBG,EAAoBrF,UACxB4E,EAAgBT,KAAKkB,GAKrBzE,EAAQgF,oBAAsB1E,EAAYI,wBAE1C,IAnHmB4E,EAmHbnC,EAtGR,SAA6BC,GAC3B,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAOF,EACdC,EAAIE,UAAkBC,IAAbJ,EAAIE,IAAmC,OAAbF,EAAIE,IAA8B,KAAbF,EAAIE,IAE9D,OAAOD,EAAII,UAAS,GAiGDC,CAAoB1D,GAIvC,GAHAX,QAAQC,IAAIU,GACZX,QAAQC,IAAI,sCAAwC6D,GArHjCmC,EAsHPnC,OArHwBK,IAAhCxD,EAAQgF,qBAEDM,EADT3B,IAAMC,MAAM,kDAIZD,IAAME,QAAQ,4BACd9C,GAAiB,GACjBqD,EAAMmB,MAAMvF,KA+GTmD,EAAY,CACf3D,EAAiB+D,KAAKvD,GACtBa,EAAW,CACTzB,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,iBAAkB,GAClBC,cAAe,GACfC,oBAAqB,GACrBC,WAAY,GACZC,YAAa,GACbb,SAAU,KAEZE,EAAY,CACVnF,UAAW,GACXiF,SAAU,KAEZ,IACE,IAAImB,EAAIhG,EAAiBiG,OAAS,EAClCD,EAAIhG,EAAiBiG,OACrBD,IACA,CACAvB,GAAiByB,SAASlG,EAAiBgG,GAAGnB,UAC9CH,GAAeyB,WAAWnG,EAAiBgG,GAAGN,aAC9C,OAIJjE,EAAM4B,kBA6HF,iBAQA,wBACEX,MAAM,0BACND,KAAK,SACLiB,QAtQR,WACE7D,QAAQC,IAAI,2CACZD,QAAQC,IAAI,CAAEgB,gBACdjB,QAAQC,IAAI,4BACZD,QAAQC,IAAIE,GACZH,QAAQC,IAAI,wBACZD,QAAQC,IAAIU,GACZX,QAAQC,IAAI,4BACZD,QAAQC,IAAIgF,GACZjF,QAAQC,IAAI,0CACZD,QAAQC,IAAIyE,GACZ1E,QAAQC,IAAI,+BACZD,QAAQC,IAAI0E,IAuPR,mBAOA,wBAAQ9B,MAAM,0BAA0BD,KAAK,SAA7C,oBAGA,wBAAQC,MAAM,yBAAyBD,KAAK,SAA5C,2BCpQO2D,MA1Ff,WAEE,SAASC,IACP,IAAK,IAAIL,EAAI,EAAGA,EAAIhG,EAAiBiG,OAAQD,IAC3C,IAAK,IAAIM,EAAI,EAAGA,EAAI/B,EAAmB0B,OAAQK,IACzCtG,EAAiBgG,GAAGpG,WAAa2E,EAAmB+B,GAAG1G,YACzDI,EAAiBgG,GAAGnB,SAClBqB,SAASlG,EAAiBgG,GAAGnB,UAC7BqB,SAAS3B,EAAmB+B,GAAGzB,UACjC7E,EAAiBgG,GAAGN,YAClBQ,SAASlG,EAAiBgG,GAAGnB,UAC7BqB,SAASlG,EAAiBgG,GAAGP,aAkDvC,OACE,qBAAKvD,UAAU,eAAf,SACE,iCACE,wBACEQ,MAAM,0BACND,KAAK,SACLiB,QAVR,WACE7D,QAAQC,IAAI,0BAMR,oBAOA,wBACE4C,MAAM,0BACND,KAAK,SACLiB,QAzCR,SAAoBjC,GAClB,QAA2CuC,IAAvClD,EAAYK,uBACdgD,IAAMC,MAAM,uCACZ3C,EAAM4B,sBACD,GAA6B,GAAzB6C,SAASxB,GAClBP,IAAMC,MAAM,qCACZ3C,EAAM4B,sBACD,GACL6C,SAASxB,KAAiBwB,SAASpF,EAAYK,wBAC/C,CACAkF,IAEA,IAAME,EAAIzD,EAAK0D,oBAAoBxG,GAC7ByG,EAAI3D,EAAK4D,sBAAsB5F,GAC/B6F,EAAI7D,EAAK8D,4BAA4BpC,GAC3C3E,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI2G,GACZ5G,QAAQC,IAAI6G,GACZxC,IAAME,QAAQ,8CAEdF,IAAMC,MAAM,iDACZ3C,EAAM4B,kBAiBJ,wBC7EJjE,EAAI,GAkEOyH,MAhEf,WAAqB,IAAD,EAEc7F,mBAAS,CACnCzB,KAAM,GACNC,OAAQ,GACRC,KAAM,KALM,mBAETe,EAFS,KAEAa,EAFA,KAQhB,SAASG,EAAaC,GAAQ,IAAD,EAEDA,EAAMC,OAAtBnC,EAFiB,EAEjBA,KAAMoC,EAFW,EAEXA,MAEdN,GAAW,SAAAO,GACP,MAAa,SAATrC,EACO,CACHA,KAAMoC,EACNnC,OAAQoC,EAAUpC,OAClBC,KAAMmC,EAAUnC,MAEJ,WAATF,EACA,CACHA,KAAMqC,EAAUrC,KAChBC,OAAQmC,EACRlC,KAAMmC,EAAUnC,MAEJ,SAATF,EACA,CACHA,KAAMqC,EAAUrC,KAChBC,OAAQoC,EAAUpC,OAClBC,KAAMkC,QAJP,KA2Bf,OAAQ,gCACR,cAAC,EAAD,IACI,uBAAOc,KAAK,OAAOG,YAAY,aAAarD,KAAK,OAAO+D,SAAU9B,EAAcG,MAAOnB,EAAQjB,OAC/F,uBAAOkD,KAAK,OAAOG,YAAY,mBAAmBrD,KAAK,SAAS+D,SAAU9B,EAAcG,MAAOnB,EAAQhB,SACvG,uBAAOiD,KAAK,OAAOG,YAAY,aAAarD,KAAK,OAAO+D,SAAU9B,EAAcG,MAAOnB,EAAQf,OAC/F,wBAAQgD,KAAK,SAASiB,QAtB1B,WAGI,OAFAtE,EAAE2E,KAAKvD,GACPX,QAAQC,IAAIV,GAER0H,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,WAkBvD,oBACA,wBAAQxE,KAAK,SAASiB,QAf1B,WACIZ,EAAKoE,QAAQ9H,IAcb,sBCjCO,G,MAAA,I,WAhCb,aAAe,oBACb+H,KAAKC,eAAgB,EACrBD,KAAKE,OAAQ,E,yCAGf,SAAMC,GACJH,KAAKC,eAAgB,EACrBE,M,oBAGF,SAAOA,GACLH,KAAKC,eAAgB,EACrBE,M,6BAGF,WACE,OAAOH,KAAKC,gB,sBAGd,WACED,KAAKE,OAAQ,I,wBAGf,WACEF,KAAKE,OAAQ,I,0BAGf,WACE,OAAOF,KAAKE,U,OCLDE,MApBf,WACE,IAAIC,EAAUC,cAOd,OACE,mCACE,mBAAGtF,MAAO,CAAEuF,WAAY,eAAgBC,SAAU,QAAlD,mDAGA,wBAAQzF,UAAU,iBAAiBwB,QAXvC,WACEkE,EAAKC,QAAO,WACVL,EAAQzD,KAAK,eAS6C+D,QAASF,EAAKG,kBAAxE,wBCyESC,MApFf,WACE,IAAIR,EAAUC,cADC,EAEyBzG,mBAAS,CAC/CiH,SAAU,GACVpH,SAAU,KAJG,mBAERqH,EAFQ,KAEMC,EAFN,KAOf,SAAS3G,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MACdwG,GAAgB,SAACvG,GACf,OAAO,2BAAKA,GAAZ,kBAAwBrC,EAAOoC,OAwCnC,OACE,qBAAKO,UAAU,aAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIC,MAAO,CAAEuF,WAAY,eAAgBU,MAAO,WAAhD,mBACA,uBAAMlG,UAAU,aAAhB,UACE,uBACEQ,MAAM,eACND,KAAK,OACLG,YAAY,WACZrD,KAAK,WACLoC,MAAOuG,EAAaD,SACpB3E,SAAU9B,IAEZ,uBACEkB,MAAM,eACND,KAAK,WACLG,YAAY,WACZrD,KAAK,WACLoC,MAAOuG,EAAarH,SACpByC,SAAU9B,OAGd,wBAAQkC,QA1Dd,SAAqBjC,GACW,KAA1ByG,EAAaD,UAA6C,KAA1BC,EAAarH,SAC/CiC,EAAKuF,MAAMH,EAAaD,SAAUC,EAAarH,UAAUmC,MAAK,SAACC,GAC7D,IAAMG,EAASH,EAAKC,KAAKE,OAEzB,GADAvD,QAAQC,IAAIsD,GACG,IAAXA,EAAc,CAAC,IACTkF,EAAcrF,EAAKC,KAAKqF,SAAxBD,UACR,GAAkB,UAAdA,EAAuB,CACzBV,EAAKY,WACL,IAAMpJ,EAAIwI,EAAKa,eACf5I,QAAQC,IAAIV,GACZwI,EAAKS,OAAM,WACTb,EAAQzD,KAAK,eAEfI,IAAME,QAAQ,gCACS,iBAAdiE,GACTV,EAAKc,aACL7I,QAAQC,IAAI,SACZ8H,EAAKS,OAAM,WACTb,EAAQzD,KAAK,gBAGfI,IAAMC,MAAM,2DAEO,IAAZhB,EACTe,IAAMC,MAAM,wBAEZD,IAAMC,MAAM,0BAIhBD,IAAMC,MAAM,iCAEd3C,EAAM4B,kBAyBF,mBACA,uBACA,uBACA,oDAEE,cAAC,IAAD,CAAMsF,GAAG,YAAT,kCCtEKC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCmBSC,MAxBf,WACE,OACE,qBAAK3G,UAAU,iBAAf,SACE,qBAAIA,UAAU,wBAAwBC,MAAO,CAACG,MAAM,SAApD,UACE,cAAC,IAAD,CAAMqG,GAAG,aAAaxG,MAAO,CAAE2G,eAAgB,QAA/C,SACE,oBAAI5G,UAAU,aAAaC,MAAO,CAAEG,MAAO,SAA3C,SACE,8CAGJ,cAAC,IAAD,CAAMqG,GAAG,WAAWxG,MAAO,CAAE2G,eAAgB,QAA7C,SACE,oBAAI5G,UAAU,aAAaC,MAAO,CAAEG,MAAO,SAA3C,SACE,4CAGJ,cAAC,IAAD,CAAMqG,GAAG,cAAcxG,MAAO,CAAE2G,eAAgB,QAAhD,SACE,oBAAI5G,UAAU,aAAaC,MAAO,CAAEG,MAAO,SAA3C,SACE,qDCmEGyG,MApFf,SAAgBnE,GACd,IAAMoE,EAAiBpE,EAAMoE,eACvBC,EAAiBrE,EAAMqE,eACvBC,GAAQ,IAAIrH,MAAOsH,qBACnBC,GAAM,IAAIvH,MAAOwH,qBAJF,EAMGrI,mBAASkI,GANZ,mBAMdI,EANc,KAMRC,EANQ,OAOGvI,mBAASoI,GAPZ,mBAOdI,EAPc,KAORC,EAPQ,KAkBrB,OAFAC,aAPA,WACE,IAAMC,GAAU,IAAI9H,MAAOsH,qBACrBS,GAAU,IAAI/H,MAAOwH,qBAC3BE,EAAQI,GACRF,EAAQG,KAGgB,KAGxB,sBAAK1H,UAAU,aAAaC,MAAO,CAAEmC,WAAY,OAAjD,UACE,qBAAK5B,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,6BAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGb,WAKT,qBAAKtG,MAAM,UAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,8CACNP,MAAO,CAAE0H,QAAS,OAFpB,4BAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGZ,WAKT,qBAAKvG,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGP,WAKT,qBAAK5G,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGL,eClCAM,MAxCf,SAAkBlF,GAChB,IAAMmF,EAAYnF,EAAMmF,UAgBxB,OACE,qBAAK7H,UAAU,YAAf,SACE,eAAC,IAAD,CAAsBjD,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,uBACA,oBAAIA,UAAU,iBAAd,mBACA,oBAAIA,UAAU,iBAAd,uBACA,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,8BACA,oBAAIA,UAAU,iBAAd,sBACA,oBAAIA,UAAU,iBAAd,wBACA,oBAAIA,UAAU,iBAAd,8BAGJ,gCACG6H,EAAU1K,KA/BQ,SAAC0K,EAAWzK,GACrC,OACE,+BACE,oBAAI0K,MAAM,MAAV,SAAiBD,EAAUnK,YAC3B,6BAAKmK,EAAU5E,QACf,6BAAK4E,EAAU3E,YACf,6BAAK2E,EAAUxE,gBACf,6BAAKwE,EAAU1E,mBACf,6BAAK0E,EAAUlF,WACf,6BAAKkF,EAAUtE,aACf,8BAAMsE,EAAUlF,SAAWkF,EAAUtE,YAAYI,QAAQ,OARlDvG,cC0CA2K,MA7Cf,WACE,OACE,gCACE,qBACEvH,MAAM,WACNP,MAAO,CAAEG,MAAO,MAAO4H,OAAQ,OAAQC,KAAM,MAAOC,IAAK,SAF3D,SAIE,oBACE1H,MAAM,kCACNP,MAAO,CAAEE,WAAY,QAFvB,SAIE,uBAAMF,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAA3C,6BACmBkC,EADnB,eAKJ,qBACE/B,MAAM,WACNP,MAAO,CAAEG,MAAO,MAAO4H,OAAQ,OAAQC,KAAM,MAAOC,IAAK,SAF3D,SAIE,oBACE1H,MAAM,kCACNP,MAAO,CAAEE,WAAY,QAFvB,SAIE,uBAAMF,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAA3C,iCACkBmC,EAAYmB,QAAQ,cC+BjCwE,MAlDf,WAA0B,IAAD,EACWrJ,mBAAS,IADpB,mBAChB+I,EADgB,KACLO,EADK,OAGDtJ,mBAAS,CAC7BgI,eAAgB,GAChBC,eAAgB,KALK,mBAGhBsB,EAHgB,KAGXC,EAHW,KAiCvB,OAzBAC,qBAEA,WACE3H,EAAK4H,kBAAkB1H,MAAK,SAACC,GAAU,IAAD,EACOA,EAAKC,KAAKqH,IAA7CvB,EAD4B,EAC5BA,eAAgBC,EADY,EACZA,eAEtBuB,EADoB,IAAnBxB,EACM,CACLA,eAAgB,IAChBC,eAAgB,KAGb,CACLD,eAAgBA,EAAiB,WACjCC,eAAgB,UAAOA,SAbF,IA0BzB,gCACE,cAAC,EAAD,CAAkB0B,SAAS,SAC3B,cAAC,EAAD,IACA,cAAC,EAAD,CACE3B,eAAgBuB,EAAIvB,eACpBC,eAAgBsB,EAAItB,iBAEtB,cAAC,EAAD,IACA,cAAC,EAAD,CAASlD,MAfb,SAAgBvF,GACd8J,GAAa,SAACM,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAqBpK,UAcrB,cAAC,EAAD,CAAUuJ,UAAWA,IACrB,cAAC,EAAD,IACA,cAAC,EAAD,QCnDFtF,EAAgB,EAChBC,EAAc,EACZmG,EAAgB,GAClBxK,EAAyB,GACzBE,EAAwB,GAgTbuK,MA9Sf,SAAkBlG,GAAQ,IAAD,EACO5D,mBAAS,CACrC+J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXP,SAAU,GACVQ,iBAAkB,GAClBL,cAAe,KARM,mBAChBxE,EADgB,KACPa,EADO,OAWiBL,mBAAS,CAC/CpB,UAAW,GACXiF,SAAU,KAbW,mBAWhBoG,EAXgB,KAWFC,EAXE,OAgBOlK,oBAAS,GAhBhB,mBAgBhBmK,EAhBgB,KAgBPC,EAhBO,OAiByBpK,oBAAS,GAjBlC,mBAiBhBqK,EAjBgB,KAiBEC,EAjBF,KAkCvB,SAAS9J,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MACD,cAATpC,GAAkC,KAAVoC,GAC1BiD,EAAM2G,oBAAoB,IAC1BD,GAAoB,GACpBjK,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXP,SAAU,GACVQ,iBAAkB,GAClBL,cAAe,OAGjBsG,GAAoB,GACpBjK,GAAW,SAACO,GACV,OAAO,2BAAKA,GAAZ,kBAAwBrC,EAAOoC,QAyJrC,OACE,sBAAKO,UAAU,gBAAf,UACE,mBACEA,UAAU,aACVC,MAAO,CACLC,UAAW,SACXC,WAAY,OACZoB,cAAe,OALnB,mBAUA,sBAAMtB,MAAO,CAAEG,MAAO,OAAtB,SACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,UAAX,sBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,UACHC,YAAY,WACZrD,KAAK,UAELoC,MAAOiD,EAAMoG,OACbzH,UAAQ,OAGZ,sBAAKb,MAAM,sBAAX,UACE,uBAAOF,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACL+D,SAAU9B,EACVqB,OAtGZ,SAAoBpB,GAClB,IAAM7B,EAAY6B,EAAMC,OAAOC,MACb,KAAd/B,IACFC,QAAQC,IAAI,+BAAiCF,GAxFjD,SAA+BA,GAC7BkD,EAAK0I,sBAAsB5L,GAAWoD,MAAK,SAACC,GAC1C,IAAMG,EAASH,EAAKC,KAAKE,OAEzB,GAAe,IAAXA,EAAc,OASZH,EAAKC,KAAKuI,GANZ7L,EAHc,EAGdA,UACAuF,EAJc,EAIdA,MACAC,EALc,EAKdA,UACAP,EANc,EAMdA,SACAQ,EAPc,EAOdA,iBACAL,EARc,EAQdA,cAEF,IAAuB,IAAnBA,EACFnF,QAAQC,IAAI,yBACZqE,IAAMC,MAAM,kDACZgH,GAAW,GACXE,GAAoB,GACpBjK,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXwF,UAAW,GACXC,iBAAkB,GAClBR,SAAU,GACVG,cAAe,SAEZ,CACLoG,GAAW,GACXE,GAAoB,GACpBJ,EAAgB,CACdtL,UAAWA,EACXiF,SAAUA,IAEZxD,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAWA,EACXwF,UAAWD,EAAQ,IAAMC,EACzBC,iBAAkBA,EAClBR,SAAU,GACVG,cAAeA,IAIjB,IAAK,IAAIgB,EAAI,EAAGA,EAAI6E,EAAc5E,OAAQD,IACpC6E,EAAc7E,GAAGpG,YAAcY,EAAQZ,WACzCsL,EAAgB,CACdtL,UAAWA,EACXiF,SAAUA,EAASgG,EAAc7E,GAAGnB,iBAOxB,IAAXzB,GAGTsI,MAAM,sCACNN,GAAW,GACXE,GAAoB,GACpBjK,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXwF,UAAW,GACXC,iBAAkB,GAClBR,SAAU,GACVa,YAAa,OAGfvB,IAAMC,MAAM,gCACZgH,GAAW,GACXE,GAAoB,GACpBjK,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXwF,UAAW,GACXC,iBAAkB,GAClBR,SAAU,GACVa,YAAa,SAUjB8F,CAAsB5L,GACtBgF,EAAM2G,oBAAoB3L,KAkGlB+B,MAAOnB,EAAQZ,eAGnB,sBAAKsC,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACL+D,SAAU9B,EACVG,MAAOnB,EAAQ4E,UACf7B,UAAQ,OAIZ,sBAAKrB,UAAU,sBAAf,UACE,uBAAOM,IAAI,WAAX,sBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,WACHC,YAAY,WACZrD,KAAK,WACL+D,SAAU9B,EACVG,MAAOnB,EAAQqE,SACftB,UAAW4H,YAMnB,sBAAKhJ,MAAO,CAAEI,YAAa,QAASkB,cAAe,QAAnD,UACE,wBACEf,MAAM,0BACND,KAAK,SACLiB,QA/HR,SAAmBjC,GACjB,GAAIwJ,EAAapG,UAAYrE,EAAQqE,UAAYrE,EAAQqE,SAAW,EAAG,CACrEtE,EAAsBwD,KAAK,CACzBnE,UAAWY,EAAQZ,UACnBiF,SAAUoG,EAAapG,SAAWrE,EAAQqE,WAO5CgG,EAAc9G,KAAKvD,GACnBH,EAAyBwK,EAAcxL,KAAI,SAACsM,GAC1C,MAAO,CACLZ,WAAYY,EAAKZ,WACjBnL,UAAW+L,EAAK/L,UAChBgM,cAAeD,EAAK9G,aAIxBhF,QAAQC,IAAIO,GAEZuE,EAAMmB,MAAMvF,GAEZa,EAAW,CACT0J,WAAYnG,EAAMoG,OAClBpL,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXP,SAAU,GACVQ,iBAAkB,GAClBL,cAAe,KAGjB,IAAK,IAAIgB,EAAI6E,EAAc5E,OAAS,EAAGD,EAAI6E,EAAc5E,OAAQD,IAAK,CACpEvB,GAAiByB,SAAS2E,EAAc7E,GAAGnB,UAC3CH,GAAeyB,WACb0E,EAAc7E,GAAGnB,SAAWgG,EAAc7E,GAAGhB,eAE/C,MAEFb,IAAME,QAAQ,gCACgB,KAArB7D,EAAQqE,UAAwC,IAArBrE,EAAQqE,SAC5CV,IAAMC,MAAM,8BAEZD,IAAMC,MAAM,6DAEdkH,GAAoB,IAiFd/H,SAAU8H,EAJZ,iBASA,wBACE3I,MAAM,0BACND,KAAK,SACLiB,QA/QR,WACE7D,QAAQC,IAAI,0CACZD,QAAQC,IAAI,oBACZD,QAAQC,IAAI+K,GACZhL,QAAQC,IAAI,6BACZD,QAAQC,IAAIO,GACZR,QAAQC,IAAI,6BACZD,QAAQC,IAAIS,GACZV,QAAQC,IAAI,mBACZD,QAAQC,IAAIU,GACZX,QAAQC,IAAI,0BACZD,QAAQC,IAAImL,IAiQR,mBAOA,wBAAQvI,MAAM,yBAAyBD,KAAK,SAA5C,2BCzQOoJ,MAlCf,SAAmBjH,GACjB,IAAMmF,EAAYnF,EAAMmF,UAaxB,OACE,qBAAK7H,UAAU,aAAf,SACE,eAAC,IAAD,CAAsBjD,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,oBACA,oBAAIA,UAAU,iBAAd,kBACA,oBAAIA,UAAU,iBAAd,sBACA,oBAAIA,UAAU,iBAAd,8BACA,oBAAIA,UAAU,iBAAd,wBAGJ,gCACG6H,EAAU1K,KAzBQ,SAAC0K,EAAWzK,GACrC,OACE,+BACE,oBAAI0K,MAAM,MAAV,SAAiB1K,EAAM,IACvB,6BAAKyK,EAAU3E,YACf,6BAAK2E,EAAUlF,WACf,6BAAKkF,EAAU/E,gBACf,8BAAM+E,EAAUlF,SAAWkF,EAAU/E,eAAea,QAAQ,OALrDvG,cCLXgB,EAAU,CACZyK,WAAY,GACZ3K,UAAW,GACX0L,cAAe,GACfC,cAAe,GACfC,SAAU,GACVC,aAAc,IA6LDC,MAzLf,SAAsBtH,GAAQ,IAAD,EACmB5D,mBAAS,CACrDZ,UAAW,GACX0L,cAAe,GACfE,SAAU,GACVD,cAAe,GACfE,aAAc,KANW,mBACpBE,EADoB,KACHC,EADG,KAS3B,SAAS5K,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MAEZyK,EADW,cAAT7M,GAAkC,KAAVoC,EACP,CACjBvB,UAAW,GACX0L,cAAe,GACfE,SAAU,GACVD,cAAe,GACfE,aAAc,IAGG,SAACrK,GAAe,IAAD,EAChC,OAAO,2BACFA,GADL,uBAEGrC,EAAOoC,GAFV,8BAII,IAAIE,MAAOC,cAAcC,WACzB,MACC,IAAIF,MAAOG,WAAa,GAAGD,WAC5B,KACA,IAAIF,MAAOI,UAAUF,YARzB,MA0EN,OACE,sBAAKG,UAAU,oBAAf,UACE,mBACEA,UAAU,aACVC,MAAO,CACLC,UAAW,SACXC,WAAY,OACZoB,cAAe,OALnB,8BAUA,sBAAMtB,MAAO,CAAEG,MAAO,OAAtB,SACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,wBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,aACZrD,KAAK,YACLsD,OAtDZ,SAAoBpB,GAClB,IAAMrB,EAAYqB,EAAMC,OAAOC,MACb,IAAdvB,IACFP,QAAQC,IAAI,+BAAiCM,GAjCjD,SAA4BA,GAC1B0C,EAAKuJ,mBAAmBjM,GAAW4C,MAAK,SAACC,GACvC,IAAMG,EAASH,EAAKC,KAAKE,OAEzB,GADAvD,QAAQC,IAAIsD,GACG,IAAXA,EAAc,CAAC,IAAD,EAC+BH,EAAKC,KAAKoJ,eAAjDlM,EADQ,EACRA,UAAW0L,EADH,EACGA,cAAeE,EADlB,EACkBA,SAClCI,EAAmB,CACjBhM,UAAWA,EACX0L,cAAeA,EACfE,SAAUA,EACVD,cAAe,GACfE,cACE,IAAIpK,MAAOC,cAAcC,WACzB,MACC,IAAIF,MAAOG,WAAa,GAAGD,WAC5B,KACA,IAAIF,MAAOI,UAAUF,kBAGzBqK,EAAmB,CACjBhM,UAAWA,EACX0L,cAAe,GACfE,SAAU,GACVD,cAAe,GACfE,aAAc,QAUlBI,CAAmBjM,KAmDXkD,SAAU9B,EACVG,MAAOwK,EAAgB/L,eAG3B,sBAAKsC,MAAM,sBAAX,UACE,uBAAOF,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAOwK,EAAgBL,mBAG3B,sBAAK5J,UAAU,sBAAf,UACE,uBAAOM,IAAI,WAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,WACHC,YAAY,YACZrD,KAAK,WACL+D,SAAU9B,EACVG,MAAOwK,EAAgBH,cAI3B,sBAAK9J,UAAU,sBAAf,UACE,uBAAOM,IAAI,kBAAX,6BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,kBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAOwK,EAAgBJ,wBAK/B,qBAAK5J,MAAO,CAAEI,YAAa,QAASkB,cAAe,QAAnD,SACE,wBACEf,MAAM,0BACND,KAAK,SACLiB,QA9FR,WACEpD,EAAU,CACRyK,WAAYnG,EAAMoG,OAClB5K,UAAW+L,EAAgB/L,UAC3B0L,cAAeK,EAAgBL,cAC/BC,cAAeI,EAAgBJ,cAC/BC,SAAUG,EAAgBH,SAC1BC,aAAcE,EAAgBF,eAoF5B,uBClIOhC,MA7Cf,WACE,OACE,gCACE,qBACEvH,MAAM,WACNP,MAAO,CAAEG,MAAO,MAAO4H,OAAQ,OAAQC,KAAM,MAAOC,IAAK,UAF3D,SAIE,oBACE1H,MAAM,kCACNP,MAAO,CAAEE,WAAY,QAFvB,SAIE,uBAAMF,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAA3C,6BACmBkC,EADnB,eAKJ,qBACE/B,MAAM,WACNP,MAAO,CAAEG,MAAO,MAAO4H,OAAQ,OAAQC,KAAM,MAAOC,IAAK,UAF3D,SAIE,oBACE1H,MAAM,kCACNP,MAAO,CAAEE,WAAY,QAFvB,SAIE,uBAAMF,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAA3C,iCACkBmC,EAAYmB,QAAQ,cCyDjCkD,MApFf,SAAgBnE,GACd,IAAM2H,EAAY3H,EAAM4H,iBAAiBD,UACnCE,EAAoB7H,EAAM4H,iBAAiBC,kBAC3CvD,GAAQ,IAAIrH,MAAOsH,qBACnBC,GAAM,IAAIvH,MAAOwH,qBAJF,EAMGrI,mBAASkI,GANZ,mBAMdI,EANc,KAMRC,EANQ,OAOGvI,mBAASoI,GAPZ,mBAOdI,EAPc,KAORC,EAPQ,KAkBrB,OAFAC,aAPA,WACE,IAAMC,GAAU,IAAI9H,MAAOsH,qBACrBS,GAAU,IAAI/H,MAAOwH,qBAC3BE,EAAQI,GACRF,EAAQG,KAGgB,KAGxB,sBAAK1H,UAAU,aAAaC,MAAO,CAAEmC,WAAY,OAAjD,UACE,qBAAK5B,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,sBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACG4C,WAKT,qBAAK/J,MAAM,UAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,8CACNP,MAAO,CAAE0H,QAAS,OAFpB,mBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACG0C,WAKT,qBAAK7J,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGP,WAKT,qBAAK5G,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGL,eCAApD,OA3Df,WA+BE,OACE,qBAAKlE,UAAU,eAAf,SACE,iCACE,wBACEQ,MAAM,0BACND,KAAK,SACLiB,QApCR,SAAoBjC,GAClB,GAAyB,IAArBnB,EAAQF,WAA4C,IAAzBE,EAAQwL,cACrC,GAAmB,GAAfpH,EACFP,IAAMC,MAAM,iCACZ3C,EAAM4B,sBACD,GAA6B,GAAzB/C,EAAQyL,cACjB5H,IAAMC,MAAM,uDACZ3C,EAAM4B,sBACD,GAAIqB,GAAepE,EAAQyL,cAAe,CAE/C,IAAMxF,EAAIzD,EAAK4J,kBAAkBrM,GAC3BoG,EAAI3D,EAAK6J,cAAcrM,GACvBqG,EAAI7D,EAAK8J,mBAAmBrM,GAClCV,QAAQC,IAAIyG,GACZ1G,QAAQC,IAAI2G,GACZ5G,QAAQC,IAAI6G,GACZxC,IAAME,QACJ,YAAc/D,EAAQyK,WAAa,iCAKrC5G,IAAMC,MAAM,sDACZ3C,EAAM4B,sBAGRc,IAAMC,MAAM,uDACZ3C,EAAM4B,kBAMJ,mBAOA,wBACEX,MAAM,0BACND,KAAK,SAFP,0BCqBOoK,OArEf,WAAwB,IAAD,EACa7L,mBAAS,IADtB,mBACd+I,EADc,KACHO,EADG,OAGOtJ,mBAAS,IAHhB,mBAGdgK,EAHc,KAGN8B,EAHM,KAKrBrC,qBA+BA,WACE3H,EAAKiK,mBAAmB/J,MAAK,SAACgK,GAC5B,IAAMhC,EAASgC,EAAI9J,KACnB4J,EAAU9B,QAlCO,IALA,MAO2BhK,mBAAS,CACvDyL,kBAAmB,IACnBF,UAAW,MATQ,mBAOdC,EAPc,KAOIS,EAPJ,KAiDrB,OACE,gCACE,cAAC,EAAD,CAAkBtC,SAAS,SAC3B,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ6B,iBAAkBA,IAC1B,cAAC,EAAD,CACExB,OAAQA,EACRjF,MAbN,SAAgBvF,GACd8J,GAAa,SAACM,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAqBpK,QAYnB+K,oBAAqB,SAAC3L,IA7CA,SAACA,GACT,KAAdA,EACFkD,EAAK0I,sBAAsB5L,GAAWoD,MAAK,SAACC,GAC1C,IAAMG,EAASH,EAAKC,KAAKE,OAEvB6J,EADa,IAAX7J,EACkB,CAClBqJ,kBAAmBxJ,EAAKC,KAAKuI,GAAG5G,SAAW,QAC3C0H,UAAW,UAAOtJ,EAAKC,KAAKuI,GAAGzG,eAGb,CAClByH,kBAAmBxJ,EAAKC,KAAKuI,GAAG5G,SAAW,QAC3C0H,UAAW,SAKjBU,EAAoB,CAClBR,kBAAmB,IACnBF,UAAW,MA2BThB,CAAoB3L,MAGxB,cAAC,EAAD,CAAcoL,OAAQA,IACtB,cAAC,EAAD,CAAWjB,UAAWA,IACtB,cAAC,EAAD,IACA,cAAC,GAAD,QC7DSmD,OAXf,WACE,OACE,gCACE,0DACA,cAAC,IAAD,CAAMvE,GAAG,IAAT,SACE,gEC8EOI,OApFf,SAAgBnE,GACd,IAAMuI,EAAavI,EAAMuI,WACnBC,EAAqBxI,EAAMwI,mBAC3BlE,GAAQ,IAAIrH,MAAOsH,qBACnBC,GAAM,IAAIvH,MAAOwH,qBAJF,EAMGrI,mBAASkI,GANZ,mBAMdI,EANc,KAMRC,EANQ,OAOGvI,mBAASoI,GAPZ,mBAOdI,EAPc,KAORC,EAPQ,KAkBrB,OAFAC,aAPA,WACE,IAAMC,GAAU,IAAI9H,MAAOsH,qBACrBS,GAAU,IAAI/H,MAAOwH,qBAC3BE,EAAQI,GACRF,EAAQG,KAGgB,KAGxB,sBAAK1H,UAAU,aAAaC,MAAO,CAAEmC,WAAY,OAAjD,UACE,qBAAK5B,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,0BAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACCsD,WAKP,qBAAKzK,MAAM,UAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,aAAX,UACE,oBACEA,MAAM,8CACNP,MAAO,CAAE0H,QAAS,OAFpB,uBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGuD,WAKT,qBAAK1K,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGP,WAKT,qBAAK5G,MAAM,SAAX,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBACEA,MAAM,4CACNP,MAAO,CAAE0H,QAAS,OAFpB,kBAMA,oBAAInH,MAAM,wBAAwBP,MAAO,CAAE0H,QAAS,OAApD,SACGL,e,2BC1CA6D,OAhCf,SAAwBzI,GActB,OACE,qBAAK1C,UAAU,uBAAuB4F,OAAQlD,EAAM0I,kBAApD,SACE,eAAC,IAAD,CAAsBrO,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,kCACA,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,gCAGJ,gCAAQ0C,EAAM2I,eAAelO,KAxBN,SAACmO,EAAUlO,GAClC,OACE,+BACE,6BAAKkO,EAASzN,gBACd,6BAAKyN,EAASvM,gBACd,6BAAKuM,EAAStM,0BACd,6BAAKsM,EAASpM,gBACd,yCAAOoM,EAASrM,4BALT7B,cC2BJmO,OA/Bf,SAAqB7I,GAanB,OACE,qBAAK1C,UAAU,oBAAoB4F,OAAQlD,EAAM8I,eAAjD,SACE,eAAC,IAAD,CAAsBzO,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,iCACA,oBAAIA,UAAU,iBAAd,kCACA,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,gCAGJ,gCAAQ0C,EAAM+I,YAAYtO,KAxBH,SAACuO,EAAUtO,GAClC,OACE,+BACE,6BAAKsO,EAAS9B,gBACd,6BAAK8B,EAASxN,YACd,6BAAKwN,EAAS7C,aACd,6BAAK6C,EAAS3B,eACd,yCAAO2B,EAAS7B,mBALTzM,cC8NJuO,OA3Nf,SAA0BjJ,GAAQ,IAAD,EACK5D,mBAAS,IADd,mBACxB8M,EADwB,KACZC,EADY,OAEG/M,mBAAS,MAFZ,mBAExBP,EAFwB,KAEbuN,EAFa,OAGDhN,mBAAS,MAHR,mBAGxBN,EAHwB,KAGfuN,EAHe,OAImBjN,oBAAS,GAJ5B,mBAIxBsM,EAJwB,KAILY,EAJK,OAKalN,oBAAS,GALtB,mBAKxB0M,EALwB,KAKRS,EALQ,OAManN,mBAAS,IANtB,mBAMxBuM,EANwB,KAMRa,EANQ,OAOOpN,mBAAS,IAPhB,mBAOxB2M,EAPwB,KAOXU,EAPW,OAQKrN,mBAAS,uBARd,mBAQxBsN,EARwB,KAQZC,EARY,KAU/B,SAASC,IACPT,EAAc,IACdC,EAAa,IACbC,EAAW,IACXC,GAAqB,GACrBE,EAAkB,IAClBD,GAAkB,GAClBE,EAAe,IACfE,EAAc,uBAqEhB,OACE,sBAAKrM,UAAWoM,EAAhB,UACE,sBAAKnM,MAAO,CAAE+H,OAAQ,QAAtB,UACE,mBACEhI,UAAU,aACVC,MAAO,CACLC,UAAW,SACXC,WAAY,MACZoB,cAAe,OALnB,6BAUA,cAAC,IAAD,CAAMkF,GAAG,cAAT,SACE,wBACEzG,UAAU,iCACVC,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,SAAUC,IAAK,OAAQF,OAAO,eAFrE,SAIE,6CAIN,sBAAM/H,MAAO,CAAEG,MAAO,QAAtB,SACE,qBAAKJ,UAAU,WAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,uBACEC,MAAO,CAAEsM,SAAU,WAAYnM,MAAO,QAAS6H,KAAM,QADvD,UAGE,uBAAO3H,IAAI,aAAX,4BACA,yBACEN,UAAU,eACVoB,SAAU,SAAC7B,GACTsM,EAActM,EAAMC,OAAOC,QAH/B,UAME,wBAAQO,UAAU,eAAeS,GAAG,aAAahB,MAAM,GAAvD,sCAGA,wBACEO,UAAU,eACVS,GAAG,aACHhB,MAAM,iBAHR,6BAOA,wBACEO,UAAU,eACVS,GAAG,aACHhB,MAAM,cAHR,gCASJ,uBACEQ,MAAO,CACLsM,SAAU,WACVtE,KAAM,QACN7H,MAAO,SAJX,UAOE,uBAAOE,IAAI,YAAX,wBACA,cAAC,KAAD,CACEN,UAAU,2BACVS,GAAG,YACH+L,SAAUjO,EACV6C,SAAU,SAACgG,GAAD,OAAU0E,EAAa1E,IACjCqF,WAAW,aACXC,QAAS,IAAI/M,KACbgN,kBAAgB,EAChBC,6BAA2B,EAC3BnN,MAAOlB,OAGX,uBACE0B,MAAO,CACLsM,SAAU,WACVtE,KAAM,QACN7H,MAAO,SAJX,UAOE,uBAAOE,IAAI,UAAX,sBACA,cAAC,KAAD,CACEN,UAAU,2BACVS,GAAG,UACH+L,SAAUhO,EACV4C,SAAU,SAACgG,GAAD,OAAU2E,EAAW3E,IAC/BqF,WAAW,aACXC,QAAS,IAAI/M,KACbgN,kBAAgB,EAChBC,6BAA2B,EAC3BnN,MAAOjB,cAMjB,gCACE,wBACEyB,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,SACrCzH,MAAM,0BACND,KAAK,SACLiB,QAxKR,WACE,GAAmB,mBAAfoK,GAAiD,KAAdrN,GAAgC,KAAZC,EAAgB,CACzEyN,GAAkB,GAClB,IAAMY,EACJtO,EAAUqB,cACV,KACCrB,EAAUuB,WAAa,GACxB,IACAvB,EAAUwB,UACN+M,EACJtO,EAAQoB,cACR,KACCpB,EAAQsB,WAAa,GACtB,IACAtB,EAAQuB,UAEVa,EAAKmM,kBAAkBF,EAAIC,GAAIhM,MAAK,SAACC,GAEpB,IADAA,EAAKC,KAAKE,QAEvBmL,EAAc,sBACdH,EAAkBnL,EAAKC,KAAKgM,cAC5BhB,GAAqB,KAErBK,EAAc,uBACdpK,IAAMC,MAAM,qCACZ8J,GAAqB,YAGpB,GACU,gBAAfJ,GACc,KAAdrN,GACY,KAAZC,EACA,CACAwN,GAAqB,GACrB,IAAMa,EACJtO,EAAUqB,cACV,KACCrB,EAAUuB,WAAa,GACxB,IACAvB,EAAUwB,UACN+M,EACJtO,EAAQoB,cACR,KACCpB,EAAQsB,WAAa,GACtB,IACAtB,EAAQuB,UAEVa,EAAKqM,eAAeJ,EAAIC,GAAIhM,MAAK,SAACC,GAEjB,IADAA,EAAKC,KAAKE,QAEvBmL,EAAc,sBACdF,EAAepL,EAAKC,KAAKkM,aACzBvP,QAAQC,IAAI6N,GACZQ,GAAkB,KAElBI,EAAc,uBACdpK,IAAMC,MAAM,qCACZ+J,GAAkB,YAItBK,IACArK,IAAMC,MAAM,yBAsGV,oBAQA,wBACEjC,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,SACrCzH,MAAM,0BACND,KAAK,SACLiB,QAAS8K,EAJX,sBAiBF,cAAC,GAAD,CACElB,kBAAmBA,EACnBC,eAAgBA,IAElB,cAAC,GAAD,CAAaG,eAAgBA,EAAgBC,YAAaA,QCxJjD0B,OAnEf,SAA4BzK,GAC1B,IAAMmF,EAAYnF,EAAMmF,UAwBxB,OACE,sBAAK7H,UAAU,2BAAf,UACE,iCACE,mBACEA,UAAU,aACVC,MAAK,aAAIC,UAAW,SAAUC,WAAY,OAArC,aAAwD,QAF/D,4BAMA,cAAC,IAAD,CAAMsG,GAAG,cAAT,SACE,wBACEzG,UAAU,iCACVC,MAAO,CACLsM,SAAU,WACVtE,KAAM,SACNC,IAAK,QALT,SAQE,6CAIN,8BACE,eAAC,IAAD,CAAsBnL,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,uBACA,oBAAIA,UAAU,iBAAd,mBACA,oBAAIA,UAAU,iBAAd,uBACA,oBAAIA,UAAU,iBAAd,sBACA,oBAAIA,UAAU,iBAAd,8BACA,oBAAIA,UAAU,iBAAd,wBACA,oBAAIA,UAAU,iBAAd,gCAGJ,gCAAQ6H,EAAU1K,KAzDC,SAAC0K,EAAWzK,GASrC,OACE,+BACE,oBAAI0K,MAAM,MAAV,SAAiBD,EAAUnK,YAC3B,6BAAKmK,EAAU5E,QACf,6BAAK4E,EAAU3E,YACf,6BAAK2E,EAAUlF,WACf,6BAAKkF,EAAU1E,mBACf,yCAAO0E,EAAUtE,cACjB,0CAhBgBT,EAgBE+E,EAAU/E,cAf1BA,GAAiB,EACZA,EAEA,gBAKA1F,GATX,IAAoB0F,gBCiSTsK,OApSf,WAAuB,IAAD,EACkBtO,mBAAS,CAC7CpB,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXG,cAAe,GACfF,iBAAkB,GAClBR,SAAU,GACVY,WAAY,GACZT,cAAe,KATG,mBACbuK,EADa,KACAC,EADA,OAWwBxO,oBAAS,GAXjC,mBAapB,SAASQ,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MAEZ6N,EADW,cAATjQ,GAAkC,KAAVoC,EACX,CACb/B,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXG,cAAe,GACfF,iBAAkB,GAClBR,SAAU,GACVY,WAAY,GACZT,cAAe,IAGF,SAACpD,GACd,OAAO,2BAAKA,GAAZ,kBAAwBrC,EAAOoC,MAuGrC,OAnIoB,UAoIlB,sBAAKO,UAAU,kBAAf,UACE,sBAAKC,MAAO,CAAE+H,OAAQ,QAAtB,UACE,mBACEhI,UAAU,aACVC,MAAK,aAAIC,UAAW,SAAUC,WAAY,OAArC,aAAwD,QAF/D,8BAMA,cAAC,IAAD,CAAMsG,GAAG,6BAAT,SACE,wBACEzG,UAAU,iCACVC,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,SAAUC,IAAK,SAFtD,SAIE,6CAIN,uBAAMjI,MAAO,CAAEG,MAAO,OAAtB,UACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACLsD,OApHZ,SAAoBpB,GAClB,IAAM7B,EAAY6B,EAAMC,OAAOC,MAEb,KAAd/B,IACFC,QAAQC,IAAI,4BAA8BF,GAC1CkD,EAAK6C,eAAe/F,GAAWoD,MAAK,SAACyM,GACnC3M,EAAK0I,sBAAsB5L,GAAWoD,MAAK,SAAC0M,GAC1C,IAAMC,EAAUF,EAAMvM,KAAKE,OACrBwM,EAAUF,EAAMxM,KAAKE,OAFyB,EAWhDqM,EAAMvM,KAAK0C,QAPbhG,EAJkD,EAIlDA,UACAuF,EALkD,EAKlDA,MACAC,EANkD,EAMlDA,UACAG,EAPkD,EAOlDA,cACAF,EARkD,EAQlDA,iBACAR,EATkD,EASlDA,SACAY,EAVkD,EAUlDA,WAEMT,EAAkB0K,EAAMxM,KAAKuI,GAA7BzG,cACRnF,QAAQC,IAAIsF,GACZvF,QAAQC,IAAIkF,GACZnF,QAAQC,IAAI6P,GACZ9P,QAAQC,IAAI8P,GACI,IAAZD,GAA6B,IAAZC,GAAiB5K,GAAiB,EACrDwK,EAAe,CACb5P,UAAWA,EACXuF,MAAOA,EACPC,UAAWA,EACXG,cAAeA,EACfF,iBAAkBA,EAClBR,SAAUA,EACVY,WAAYA,EACZT,cAAeA,IAEI,IAAZ2K,GAA6B,IAAZC,EAC1BJ,EAAe,CACb5P,UAAWA,EACXuF,MAAOA,EACPC,UAAWA,EACXG,cAAeA,EACfF,iBAAkBA,EAClBR,SAAUA,EACVY,WAAYA,EACZT,cAAe,aAGjBwK,EAAe,CACb5P,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXG,cAAe,GACfF,iBAAkB,GAClBR,SAAU,GACVY,WAAY,GACZT,cAAe,KAEjBb,IAAMC,MAAM,gDA6DVd,SAAU9B,EACVG,MAAO4N,EAAY3P,eAGvB,sBAAK8C,MAAM,sBAAX,UACE,uBAAOF,IAAI,QAAX,mBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,QACHC,YAAY,QACZrD,KAAK,QACL+D,SAAU9B,EACVG,MAAO4N,EAAYpK,WAGvB,sBAAKjD,UAAU,sBAAf,UACE,uBAAOM,IAAI,YAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACL+D,SAAU9B,EACVG,MAAO4N,EAAYnK,eAGvB,sBAAKlD,UAAU,sBAAf,UACE,uBAAOM,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAO4N,EAAYhK,sBAIzB,sBACErD,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKG,MAAM,sBAAX,UACE,uBAAOF,IAAI,MAAX,iCACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,MACHC,YAAY,sBACZrD,KAAK,mBACL+D,SAAU9B,EACVG,MAAO4N,EAAYlK,sBAGvB,sBAAKnD,UAAU,sBAAf,UACE,uBAAOM,IAAI,WAAX,sBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,WACHC,YAAY,WACZrD,KAAK,WAEL+D,SAAU9B,EACVG,MAAO4N,EAAY1K,cAGvB,sBAAKnC,MAAM,sBAAX,UACE,uBAAOF,IAAI,YAAX,wBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,YACHC,YAAY,aACZrD,KAAK,aACL+D,SAAU9B,EACVG,MAAO4N,EAAY9J,gBAGvB,sBAAK/C,MAAM,sBAAX,UACE,uBAAOF,IAAI,gBAAX,2BACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,gBACHC,YAAY,gBACZrD,KAAK,gBACL+D,SAAU9B,EACVG,MAAO4N,EAAYvK,cACnBtB,QAAS,SAACjC,GACR,GAA2B,YAAvBA,EAAMC,OAAOC,MACf,OAAQF,EAAMC,OAAOC,MAAQ,eAOzC,sBAAKQ,MAAO,CAAEI,YAAa,QAASkB,cAAe,QAAnD,UACE,wBACEf,MAAM,0BACND,KAAK,SACLiB,QA/JR,WACgC,KAA1B6L,EAAY3P,WACdkD,EAAK+M,mCAAmCN,GAAavM,MAAK,SAACC,GAAU,IAAD,EACvCA,EAAKC,KAAxBE,EAD0D,EAC1DA,OAAQ0M,EADkD,EAClDA,OAChBjQ,QAAQC,IAAIsD,GACZvD,QAAQC,IAAIgQ,MAEdN,EAAe,CACb5P,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXG,cAAe,GACfF,iBAAkB,GAClBR,SAAU,GACVY,WAAY,GACZT,cAAe,MAGjBb,IAAMC,MAAM,sBA0IV,oBAeA,wBACE1B,MAAM,0BACND,KAAK,SACLiB,QA1PR,WACE8L,EAAe,CACb5P,UAAW,GACXuF,MAAO,GACPC,UAAW,GACXG,cAAe,GACfF,iBAAkB,GAClBR,SAAU,GACVY,WAAY,GACZT,cAAe,MA8Ob,0BClOO+K,OAvDf,SAAmBnL,GACjB,IAAMmF,EAAYnF,EAAMmF,UAexB,OACE,sBAAK7H,UAAU,iBAAf,UACE,iCACE,mBACEA,UAAU,aACVC,MAAK,aAAIC,UAAW,SAAUC,WAAY,OAArC,aAAwD,QAF/D,2BAMA,cAAC,IAAD,CAAMsG,GAAG,cAAT,SACE,wBACEzG,UAAU,iCACVC,MAAO,CACLsM,SAAU,WACVtE,KAAM,SACNC,IAAK,QALT,SAQE,6CAIN,8BACE,eAAC,IAAD,CAAsBnL,SAAO,EAACC,UAAQ,EAACgD,UAAU,WAAjD,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,yBACA,oBAAIA,UAAU,iBAAd,2BACA,oBAAIA,UAAU,iBAAd,sBACA,oBAAIA,UAAU,iBAAd,4BAGJ,gCAAQ6H,EAAU1K,KA7CC,SAAC0K,EAAWzK,GACrC,OACE,+BACE,oBAAI0K,MAAM,MAAV,SAAiBD,EAAUnJ,QAC3B,6BACGmJ,EAAUxK,OAEb,6BAAKwK,EAAUiG,QACf,6BAAKjG,EAAUzB,cANRhJ,iBCkMA2Q,OAvMf,WAA4B,IAAD,EACWjP,mBAAS,CAC3CJ,MAAO,GACPrB,KAAM,GACNsB,SAAU,GACVmP,MAAO,GACP1H,UAAW,KANY,mBAClB3H,EADkB,KACNuP,EADM,KASzB,SAAS1O,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MAEZuO,EADW,UAAT3Q,GAA8B,KAAVoC,EACR,CACZf,MAAO,GACPrB,KAAM,GACNsB,SAAU,GACVmP,MAAO,GACP1H,UAAW,IAGC,SAAC1G,GACb,OAAO,2BAAKA,GAAZ,kBAAwBrC,EAAOoC,MAgFrC,OACE,sBAAKO,UAAU,wBAAf,UACE,sBAAKC,MAAO,CAAE+H,OAAQ,QAAtB,UACE,mBACEhI,UAAU,aACVC,MAAK,aAAIC,UAAW,SAAUC,WAAY,OAArC,aAAwD,QAF/D,qCAMA,cAAC,IAAD,CAAMsG,GAAG,6BAAT,SACE,wBACEzG,UAAU,iCACVC,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,SAAUC,IAAK,SAFtD,SAIE,6CAIN,sBAAMjI,MAAO,CAAEG,MAAO,OAAtB,SACE,sBACEJ,UAAU,WACVC,MAAO,CAAEG,MAAO,OAAQC,YAAa,QAFvC,UAIE,sBAAKL,UAAU,sBAAf,UACE,uBAAOM,IAAI,QAAX,yBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,QACHC,YAAY,cACZrD,KAAK,QACLsD,OAhGZ,SAAoBpB,GAClB,IAAMb,EAAQa,EAAMC,OAAOC,MAEb,KAAVf,IACFf,QAAQC,IAAI,4BAA8Bc,GAC1CkC,EAAKqN,mBAAmBvP,GAAOoC,MAAK,SAACC,GACnC,IAAMG,EAASH,EAAKC,KAAKE,OAEzB,GADAvD,QAAQC,IAAIsD,GACG,IAAXA,EAAc,CAAC,IAAD,EAOZH,EAAKC,KAAKqF,SALZ3H,EAFc,EAEdA,MACArB,EAHc,EAGdA,KACAsB,EAJc,EAIdA,SACAmP,EALc,EAKdA,MACA1H,EANc,EAMdA,UAGA4H,EADgB,YAAd5H,EACY,CACZ1H,MAAOA,EACPrB,KAAMA,EACNsB,SAAUA,EACVmP,MAAOA,EACP1H,UAAW,IAGC,CACZ1H,MAAOA,EACPrB,KAAMA,EACNsB,SAAUA,EACVmP,MAAOA,EACP1H,UAAWA,SAIf4H,EAAc,CACZtP,MAAOA,EACPrB,KAAM,GACNsB,SAAU,GACVmP,MAAO,GACP1H,UAAW,UA0DThF,SAAU9B,EACVG,MAAOhB,EAAWC,WAGtB,sBAAK8B,MAAM,sBAAX,UACE,uBAAOF,IAAI,QAAX,uBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,OACHC,YAAY,YACZrD,KAAK,OACL+D,SAAU9B,EACVG,MAAOhB,EAAWpB,UAGtB,sBAAK2C,UAAU,sBAAf,UACE,uBAAOM,IAAI,QAAX,sBACA,uBACEC,KAAK,OACLC,MAAM,eACNC,GAAG,QACHC,YAAY,WACZrD,KAAK,QACL+D,SAAU9B,EACVG,MAAOhB,EAAWqP,WAGtB,sBAAKtN,MAAM,sBAAX,UACE,uBAAOF,IAAI,YAAX,uBACA,uBACE4N,KAAK,aACL1N,MAAM,eACNC,GAAG,YACHC,YAAY,YACZrD,KAAK,YACL+D,SAAU9B,EACVG,MAAOhB,EAAW2H,YAEpB,2BAAU3F,GAAG,aAAb,UACE,wBAAQhB,MAAM,UACd,wBAAQA,MAAM,4BAKtB,sBAAKQ,MAAO,CAAEsM,SAAU,WAAYtE,KAAM,QAASkG,OAAQ,QAA3D,UACE,wBACE3N,MAAM,0BACND,KAAK,SACLiB,QArGR,WAC2B,KAArB/C,EAAWC,OACbkC,EAAKwN,sBAAsB3P,GAAYqC,MAAK,SAACC,GAAU,IAAD,EACzBA,EAAKC,KAAxBE,EAD4C,EAC5CA,OAAQ0M,EADoC,EACpCA,OAChBjQ,QAAQC,IAAIsD,GACZvD,QAAQC,IAAIgQ,MAEdI,EAAc,CACZtP,MAAO,GACPrB,KAAM,GACNsB,SAAU,GACVmP,MAAO,GACP1H,UAAW,MAGbzI,QAAQC,IAAI,iBAmFV,oBAOA,wBACE4C,MAAM,0BACND,KAAK,SACLiB,QApKR,WACEwM,EAAc,CACZtP,MAAO,GACPrB,KAAM,GACNsB,SAAU,GACVmP,MAAO,GACP1H,UAAW,MA2JT,0BC5JOiI,OAhCf,WACE,OACE,sBAAKrO,UAAU,UAAf,UACA,cAAC,IAAD,CAAMyG,GAAG,6BAA6BxG,MAAO,CAACsM,SAAS,WAAWnM,MAAM,eAAxE,SACI,wBAAQI,MAAM,0BAA0BD,KAAK,SAA7C,+BAIF,cAAC,IAAD,CAAMkG,GAAG,8BAAT,SACE,wBAAQjG,MAAM,0BAA0BD,KAAK,SAA7C,gCAIF,cAAC,IAAD,CAAMkG,GAAG,6BAAT,SACE,wBAAQjG,MAAM,0BAA0BD,KAAK,SAA7C,gCAIF,cAAC,IAAD,CAAMkG,GAAG,6BAAT,SACE,wBAAQjG,MAAM,0BAA0BD,KAAK,SAA7C,+BAIF,cAAC,IAAD,CAAMkG,GAAG,8BAAT,SACE,wBAAQjG,MAAM,0BAA0BD,KAAK,SAA7C,oCC+EO+N,OAzFf,WACE/F,qBA4BA,WACE3H,EAAK4H,kBAAkB1H,MAAK,SAACC,GAAU,IAAD,EACsBA,EAAKC,KAAKqH,IAA5DkG,EAD4B,EAC5BA,qBAAsBC,EADM,EACNA,wBAE5BlG,EAD2B,OAAzBiG,GAA6D,IAA5BC,EAC5B,CACLvD,WAAY,cACZC,mBAAoB,KAEY,OAAzBqD,EACF,CACLtD,WAAY,cACZC,mBAAoBsD,GAEe,IAA5BA,EACF,CACLvD,WAAY,UAAOsD,EACnBrD,mBAAoB,KAGf,CACLD,WAAY,UAAOsD,EACnBrD,mBAAoBsD,EAA0B,kBAjD3B,IAC3BjG,qBAWA,WACE3H,EAAK6N,0BAA0B3N,MAAK,SAACC,GACV,IAArBA,EAAKC,KAAKE,QACZwN,EAAwB3N,EAAKC,KAAK2N,qBAdL,IACnCpG,qBAkBA,WACE3H,EAAKgO,qBAAqB9N,MAAK,SAACC,GACL,IAArBA,EAAKC,KAAKE,QACZ2N,EAAoB9N,EAAKC,KAAK8N,cArBL,IAHP,MAKFhQ,mBAAS,CAC7BmM,WAAY,GACZC,mBAAoB,KAPE,mBAKjB7C,EALiB,KAKZC,EALY,OAUgCxJ,mBAAS,IAVzC,mBAUjBiQ,EAViB,KAUKL,EAVL,OAWwB5P,mBAAS,IAXjC,mBAWjBkQ,EAXiB,KAWCH,EAXD,KAwDxB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,CACE5D,WAAY5C,EAAI4C,WAChBC,mBAAoB7C,EAAI6C,qBAG1B,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,KAAK,6BAAZ,SACE,cAAC,GAAD,CAAoBpH,UAAWkH,MAEjC,eAAC,IAAD,CAAOE,KAAK,8BAAZ,UACE,cAAC,GAAD,CAAoBpH,UAAWkH,IAC/B,cAAC,GAAD,OAEF,cAAC,IAAD,CAAOE,KAAK,6BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,6BAAZ,SACE,cAAC,GAAD,CAAWpH,UAAWmH,MAExB,eAAC,IAAD,CAAOC,KAAK,8BAAZ,UACE,cAAC,GAAD,CAAWpH,UAAWmH,IACtB,cAAC,GAAD,c,SC5CKE,OAlDf,YAAwE,IAAnCC,EAAkC,EAA7CC,UAA4BH,EAAiB,EAAvBA,KAAeI,EAAQ,qCAC/D/J,EAAUC,cAChB,MAAa,gBAAT0J,EACEvJ,EAAKa,eAEL,cAAC,IAAD,2BACM8I,GADN,IAEExK,OAAQ,WACN,OAAIa,EAAKG,kBACA,cAACsJ,EAAD,IAEA,cAAC,IAAD,CAAU1I,GAAG,gBAM5BxE,IAAMC,MACJ,wEAEK,cAAC,IAAD,CAAUuE,GAAInB,EAAQgK,QAAQ,MAerC,cAAC,IAAD,2BACMD,GADN,IAEExK,OAAQ,WACN,OAAIa,EAAKG,mBACPlI,QAAQC,IAAI,SACL,cAACuR,EAAD,KAEA,cAAC,IAAD,CAAU1I,GAAG,gBCjCjB8I,OAXf,WACE,OACE,gCACE,cAAC,EAAD,IACA,qBAAKC,IAAI,yKCUAC,OAbf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMhJ,GAAG,aAAT,uBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,4BCHSiJ,OANf,WACI,OAAO,8BACH,cAAC,GAAD,O,cCsGOC,OAtGf,WAAqB,IAAD,EACkB7Q,mBAAS,CAC3CJ,MAAO,GACPrB,KAAK,GACLyQ,MAAO,GACPnP,SAAU,GACVyH,UAAW,KANK,mBACX3H,EADW,KACCuP,EADD,OAS4BlP,mBAAS,IATrC,mBASX8Q,EATW,KASMC,EATN,KAWlB,SAASvQ,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,MACduO,GAAc,SAACtO,GACb,OAAO,2BAAKA,GAAZ,kBAAwBrC,EAAOoC,OAEpB,oBAATpC,GACFwS,EAAmBpQ,GAiCvB,OACE,qBAAKO,UAAU,aAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIC,MAAO,CAAEuF,WAAY,eAAgBU,MAAO,WAAhD,sBAGA,uBAAMlG,UAAU,aAAhB,UACE,uBACEQ,MAAM,eACND,KAAK,OACLG,YAAY,YACZrD,KAAK,OACL+D,SAAU9B,EACVG,MAAOhB,EAAWpB,OAEpB,uBACEmD,MAAM,eACND,KAAK,QACLG,YAAY,WACZrD,KAAK,QACL+D,SAAU9B,EACVG,MAAOhB,EAAWqP,QAEpB,uBACEtN,MAAM,eACND,KAAK,WACLG,YAAY,WACZrD,KAAK,WACL+D,SAAU9B,EACVG,MAAOhB,EAAWE,WAEpB,uBACE6B,MAAM,eACND,KAAK,WACLG,YAAY,mBACZrD,KAAK,kBACL+D,SAAU9B,EACVG,MAAOmQ,OAGX,wBAAQpO,QArEd,WAEwB,KAApB/C,EAAWpB,MACU,KAArBoB,EAAWqP,OACa,KAAxBrP,EAAWE,UACS,KAApBiR,EAEIA,IAAoBnR,EAAWE,UACjCiC,EAAKkP,iBAAiBrR,GAAYqC,MAAK,SAACC,GAAU,IAAD,EACpBA,EAAKC,KAAxBE,EADuC,EACvCA,OAAQ0M,EAD+B,EAC/BA,OAChBjQ,QAAQC,IAAIsD,GACZvD,QAAQC,IAAIgQ,MAEdI,EAAc,CACZtP,MAAO,GACPrB,KAAK,GACLyQ,MAAO,GACPnP,SAAU,GACVyH,UAAW,KAEbyJ,EAAmB,KAEnB5N,IAAMC,MAAM,0BAGdD,IAAMC,MAAM,6BA4CV,sBACA,uBACA,uBACA,oDAEE,cAAC,IAAD,CAAMuE,GAAG,SAAT,6BCvFKsJ,OATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,GAAD,QCkDSC,OAnCf,WACE,OACE,gCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,IAAIG,UAAWG,KACjC,cAAC,IAAD,CAAOU,OAAK,EAAChB,KAAK,SAASG,UAAW1I,IACtC,cAAC,IAAD,CAAOuJ,OAAK,EAAChB,KAAK,YAAYG,UAAWW,KACzC,cAAC,GAAD,CAAgBE,OAAK,EAAChB,KAAK,WAAWG,UAAWM,KACjD,cAAC,GAAD,CAAgBO,OAAK,EAAChB,KAAK,aAAaG,UAAWjH,IACnD,cAAC,GAAD,CAAgB8H,OAAK,EAAChB,KAAK,WAAWG,UAAWzE,KACjD,cAAC,GAAD,CAAgBsF,OAAK,EAAChB,KAAK,cAAcG,UAAWd,KACpD,cAAC,GAAD,CAAgB2B,OAAK,EAAChB,KAAK,6BAA6BG,UAAWd,KACnE,cAAC,GAAD,CAAgB2B,OAAK,EAAChB,KAAK,8BAA8BG,UAAWd,KACpE,cAAC,GAAD,CAAgB2B,OAAK,EAAChB,KAAK,6BAA6BG,UAAWd,KACnE,cAAC,GAAD,CAAgB2B,OAAK,EAAChB,KAAK,6BAA6BG,UAAWd,KACnE,cAAC,GAAD,CAAgB2B,OAAK,EAAChB,KAAK,8BAA8BG,UAAWd,KACpE,cAAC,IAAD,CAAO2B,OAAK,EAAChB,KAAK,UAAUG,UAAWpE,KACvC,cAAC,GAAD,CAAgBiF,OAAK,EAAChB,KAAK,QAAQG,UAAWzK,IAC9C,cAAC,IAAD,CAAOsL,OAAK,EAAChB,KAAK,OAAOG,UAAWc,IACpC,cAAC,IAAD,CAAUzJ,GAAG,cAIjB,cAAC,IAAD,CACE0J,MAAO,CAAEC,MAAO,GAChBC,QAAS,IACT9D,SAAS,YACT+D,OAAO,QACPC,OAAQ,SC/ChB3L,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.8de2b37a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div>\r\n      <h1>Error 404. Page not found!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","\r\nimport React from 'react';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport {a} from './TestForm';\r\n\r\nfunction Table() {\r\n\r\n    const renderArray = (a,index) => {\r\n    return (\r\n        <tr>\r\n            <th>{a.name}</th>\r\n            <th>{a.mobile}</th>\r\n            <th>{a.city}</th>\r\n        </tr>\r\n    );\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <ReactBootStrap.Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Mobile</th>\r\n            <th>City</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {a.map(renderArray)}\r\n        </tbody>\r\n      </ReactBootStrap.Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nconst USERS_REST_API_URL = \"http://localhost:7777/abc\";\r\n\r\nclass UserService {\r\n  //================poc===================\r\n  // getUsers(){\r\n  //     return axios.get(USERS_REST_API_URL);\r\n  // }\r\n  // putuser(a){\r\n  //     console.log(a);\r\n  //     return axios.put(USERS_REST_API_URL,a);\r\n\r\n  // }\r\n  //======================REAL TIME DAT BAR======================================\r\n  getRealTimeData() {\r\n    return axios.get(\"https://ibs-dev-app.herokuapp.com/getRealTimeData\");\r\n  }\r\n\r\n  //inventory page functions\r\n  //===================fetching functions=========================================\r\n  getItemDetails(item_code) {\r\n    console.log(\"CALLING SERVER WITH ITEMCODE :-\" + item_code);\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getitemdetailsfrominventorytable/?item_code=\" +\r\n        item_code\r\n    );\r\n  }\r\n  getSupplierDetails(supplier_name) {\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getsupplierdetailsfromSupplierRecord?supplier_name=\" +\r\n        supplier_name\r\n    );\r\n  }\r\n  //getitemdetails() alredy shown in billing page functions....\r\n  //===================Inserting  functions=======================================\r\n  insertInventoryData(inventoryDetails) {\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/saveinventorypage\",\r\n      inventoryDetails\r\n    );\r\n  }\r\n  insertSupplierDetails(supplierobj) {\r\n    console.log(supplierobj);\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/saveSupplierRecordFromInventorypage\",\r\n      supplierobj\r\n    );\r\n  }\r\n  insertListofRetailPriceData(arrayofRPD) {\r\n    console.log(arrayofRPD);\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/addItemsToRetailPriceData\",\r\n      arrayofRPD\r\n    );\r\n  }\r\n  //================================================================================\r\n  //===================Billing page functions=====================================\r\n  //===================fetching functions=========================================\r\n  getSaleInvoiceNo() {\r\n    return axios.get(\"https://ibs-dev-app.herokuapp.com/getSalesInvoicenumber\");\r\n  }\r\n\r\n  getItemDetailsForSale(item_code) {\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getitemdetailsforsale?item_code=\" + item_code\r\n    );\r\n  }\r\n  getCustomerDetails(mobile_no) {\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getCustomerdetailsfromInvoices?mobile_no=\" +\r\n        mobile_no\r\n    );\r\n  }\r\n  getArrayOfBillingObject() {\r\n    return axios.get(\"https://ibs-dev-app.herokuapp.com/getArrayOfBillingObject\");\r\n  }\r\n  //===================Inserting functions functions===============================\r\n  insertListOfItems(arrayOfItemSaleObjects) {\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/ListItemsinserttoItemSale\",\r\n      arrayOfItemSaleObjects\r\n    );\r\n  }\r\n\r\n  insertInvoice(invoice) {\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/insertInvoicefromInvoices\",\r\n      invoice\r\n    );\r\n  }\r\n  updateItemQuantity(arrayOfQuantityUpdate) {\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/updateitemquantity\",\r\n      arrayOfQuantityUpdate\r\n    );\r\n  }\r\n  //================================================================================\r\n\r\n  //======================monitoring functions=======================================\r\n  updateInventoryAndSellingPriceData(details) {\r\n    console.log(details);\r\n    return axios.put(\r\n      \"https://ibs-dev-app.herokuapp.com/updateInventoryAndSellingPrice\",\r\n      details\r\n    );\r\n  }\r\n  getPruchaseReport(startDate, endDate) {\r\n    console.log(startDate);\r\n    console.log(endDate);\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getPurchaseReport?startDate=\" +\r\n        startDate +\r\n        \"&endDate=\" +\r\n        endDate\r\n    );\r\n  }\r\n  getSalesReport(startDate, endDate) {\r\n    console.log(startDate);\r\n    console.log(endDate);\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/getSalesReport?startDate=\" +\r\n        startDate +\r\n        \"&endDate=\" +\r\n        endDate\r\n    );\r\n  }\r\n\r\n  registerEmployee(empDetails) {\r\n    return axios.put(\"https://ibs-dev-app.herokuapp.com/registerEmployee\", empDetails);\r\n  }\r\n\r\n  getEmployeeDetails(empId) {\r\n    return axios.get(\"https://ibs-dev-app.herokuapp.com/getEmployeeDetails?empId=\" + empId);\r\n  }\r\n\r\n  updateEmployeeDetails(empDetails) {\r\n    return axios.put(\"https://ibs-dev-app.herokuapp.com/updateEmployeeDetails\", empDetails);\r\n  }\r\n\r\n  getListOfEmployees() {\r\n    return axios.get(\"https://ibs-dev-app.herokuapp.com/getListOfEmployees\");\r\n  }\r\n\r\n  login(empId, password) {\r\n    return axios.get(\r\n      \"https://ibs-dev-app.herokuapp.com/login?empId=\" + empId + \"&password=\" + password\r\n    );\r\n  }\r\n}\r\n\r\n  //==================================user function===================================\r\n\r\nexport default new UserService();\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nlet supplierObj = {};\r\nlet totalInvoiceValue = 0;\r\nfunction SupplierForm() {\r\n  const [details, setDetails] = useState({\r\n    supplier_name: \"\",\r\n    supplier_code: \"\",\r\n    supplier_invoice_number: \"\",\r\n    supplier_invoice_value: \"\",\r\n    purchase_date: \"\",\r\n  });\r\n\r\n  const [fieldDisabled, setFieldDisabled] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"supplier_name\" && value == \"\") {\r\n      setDetails({\r\n        supplier_name: \"\",\r\n        supplier_code: \"\",\r\n        supplier_invoice_number: \"\",\r\n        supplier_invoice_value: \"\",\r\n        purchase_date: \"\",\r\n      });\r\n    } else {\r\n      setDetails((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value,\r\n          purchase_date:\r\n            new Date().getFullYear().toString() +\r\n            \"-\" +\r\n            (new Date().getMonth() + 1).toString() +\r\n            \"-\" +\r\n            new Date().getDate().toString(),\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  const {\r\n    supplier_code,\r\n    supplier_name,\r\n    supplier_invoice_number,\r\n    supplier_invoice_value,\r\n    purchase_date,\r\n  } = supplierObj;\r\n\r\n  //this returns true if any field is empty\r\n  function checkObjectisFilled(obj) {\r\n    let arr = [];\r\n    for (let key in obj) {\r\n      arr.push(obj[key] !== undefined && obj[key] !== null && obj[key] !== \"\");\r\n    }\r\n    return arr.includes(false);\r\n  }\r\n\r\n  //this handels alert message\r\n  function handleAlert(isAllNotFilled) {\r\n    if (isAllNotFilled)\r\n      Alert.error(\"Please fill all the fields of Supplier Details!\");\r\n    else Alert.success(\"Supplier added successfully!\");\r\n  }\r\n\r\n  function handleAdd(event) {\r\n    const isAnyEmpty = checkObjectisFilled(details);\r\n    console.log(\"some filed of supplier is empty :-\" + isAnyEmpty);\r\n    handleAlert(isAnyEmpty);\r\n    if (!isAnyEmpty) {\r\n      supplierObj = details;\r\n      console.log(\"pushing details into supplier obj\");\r\n      console.log(supplierObj);\r\n      setDetails({\r\n        supplier_name: details.supplier_name,\r\n        supplier_code: details.supplier_code,\r\n        supplier_invoice_number: details.supplier_invoice_number,\r\n        supplier_invoice_value: details.supplier_invoice_value,\r\n        purchase_date: details.purchase_date,\r\n      });\r\n      setFieldDisabled(true);\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  function handleRemove() {\r\n    setFieldDisabled(false);\r\n    setDetails({\r\n      supplier_name: \"\",\r\n      supplier_code: \"\",\r\n      supplier_invoice_number: \"\",\r\n      supplier_invoice_value: \"\",\r\n      purchase_date: \"\",\r\n    });\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const supplier_name = details.supplier_name;\r\n    console.log(\r\n      \"get supplier function called with argument as:-\" + supplier_name\r\n    );\r\n    user.getSupplierDetails(supplier_name).then((resp) => {\r\n      const {\r\n        supplier_name,\r\n        supplier_code,\r\n        supplier_invoice_number,\r\n        supplier_invoice_value,\r\n      } = resp.data.contentsupplier;\r\n      console.log(\"we got resp data as:-\" + resp.data);\r\n      const status = resp.data.status;\r\n      if (status === 1) {\r\n        setDetails({\r\n          supplier_name: supplier_name,\r\n          supplier_code: supplier_code,\r\n          supplier_invoice_number: \"\",\r\n          supplier_invoice_value: \"\",\r\n          purchase_date: \"\",\r\n        });\r\n      } else console.log(\"no supplier with such name in DB\");\r\n    });\r\n    event.preventDefault();\r\n  }\r\n  function setInvoicevalue() {\r\n    totalInvoiceValue = details.supplier_invoice_value;\r\n  }\r\n  return (\r\n    <div className=\"supplier-form crd\">\r\n      <p\r\n        className=\"text-color\"\r\n        style={{ textAlign: \"center\", paddingTop: \"10px\" }}\r\n      >\r\n        Supplier Details\r\n      </p>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"supplier_name\">Supplier Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"supplier_name\"\r\n              placeholder=\"Supplier Name\"\r\n              name=\"supplier_name\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={details.supplier_name}\r\n              disabled={fieldDisabled}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"supplier_code\">Supplier Code</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"supplier_code\"\r\n              placeholder=\"Supplier Code\"\r\n              name=\"supplier_code\"\r\n              onChange={handleChange}\r\n              value={details.supplier_code}\r\n              disabled={fieldDisabled}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"invoice_number\">Invoice Number</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"invoice_number\"\r\n              placeholder=\"Invoice Number\"\r\n              name=\"supplier_invoice_number\"\r\n              onChange={handleChange}\r\n              value={details.supplier_invoice_number}\r\n              disabled={fieldDisabled}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"invoice_value\">Invoice Value</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"invoice_value\"\r\n              placeholder=\"Invoice Value\"\r\n              name=\"supplier_invoice_value\"\r\n              onChange={handleChange}\r\n              onblur={setInvoicevalue}\r\n              value={details.supplier_invoice_value}\r\n              disabled={fieldDisabled}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ paddingLeft: \"800px\", paddingBottom: \"20px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleAdd}\r\n          disabled={fieldDisabled}\r\n        >\r\n          ADD\r\n        </button>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleRemove}\r\n          style={{ marginLeft: \"10px\" }}\r\n        >\r\n          EDIT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupplierForm;\r\nexport { supplierObj, totalInvoiceValue };\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport { supplierObj } from \"./SupplierForm\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nconst inventoryDetails = [];\r\nconst prvQuantityDetails = [];\r\nconst retailDataArray = [];\r\nlet sumOfQuantity = 0;\r\nlet totalAmount = 0;\r\n//to temporary store the item quantity of fecthed item in store\r\nfunction InvForm(props) {\r\n  const [quantitydetails, setquantity] = useState({\r\n    item_code: \"\",\r\n    quantity: \"\",\r\n  });\r\n\r\n  const [fieldDisabled, setFieldDisabled] = useState(true);\r\n\r\n  const [reatailPriceDetails, setRetailPriceDetails] = useState({\r\n    item_code: \"\",\r\n    selling_price: 0,\r\n  });\r\n\r\n  const [details, setDetails] = useState({\r\n    item_code: \"\",\r\n    brand: \"\",\r\n    item_name: \"\",\r\n    unit_measurement: \"\",\r\n    stock_entry_date: \"\",\r\n    item_category: \"\",\r\n    supplier_invoice_no: \"\",\r\n    unit_price: \"\",\r\n    total_value: \"\",\r\n    quantity: \"\",\r\n  });\r\n  //arranged by sagar\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"item_code\" && value === \"\") {\r\n      setDetails({\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        unit_measurement: \"\",\r\n        stock_entry_date: \"\",\r\n        item_category: \"\",\r\n        supplier_invoice_no: \"\",\r\n        unit_price: \"\",\r\n        total_value: \"\",\r\n        quantity: \"\",\r\n      });\r\n    } else {\r\n      setDetails((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value,\r\n          stock_entry_date:\r\n            new Date().getFullYear().toString() +\r\n            \"-\" +\r\n            (new Date().getMonth() + 1).toString() +\r\n            \"-\" +\r\n            new Date().getDate().toString(),\r\n          supplier_invoice_no: supplierObj.supplier_invoice_number,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  //arranged by sagar\r\n  function handleAlert(isAllNotFilled) {\r\n    if (details.supplier_invoice_no === undefined) {\r\n      Alert.error(\"Please fill all the fields of Inventory Form!\");\r\n    } else if (isAllNotFilled) {\r\n      Alert.error(\"Please fill all the fields of Inventory Form!\");\r\n    } else {\r\n      Alert.success(\"Item added to the table!\");\r\n      setFieldDisabled(false);\r\n      props.onAdd(details);\r\n    }\r\n  }\r\n\r\n  //this returns true if any field is empty\r\n  function checkObjectisFilled(obj) {\r\n    let arr = [];\r\n    for (let key in obj) {\r\n      arr.push(obj[key] !== undefined && obj[key] !== null && obj[key] !== \"\");\r\n    }\r\n    return arr.includes(false);\r\n  }\r\n\r\n  //checking object and  array conatin\r\n  function checkAllObj() {\r\n    console.log(\"Inv-form recived obj from supplier-form\");\r\n    console.log({ supplierObj });\r\n    console.log(\"inventory array of obj:-\");\r\n    console.log(inventoryDetails);\r\n    console.log(\"our details array :-\");\r\n    console.log(details);\r\n    console.log(\" quantity in store is :-\");\r\n    console.log(quantitydetails);\r\n    console.log(\" Array of item quantity in store is :-\");\r\n    console.log(prvQuantityDetails);\r\n    console.log(\" Array of retail data is :-\");\r\n    console.log(retailDataArray);\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const item_code = event.target.value;\r\n\r\n    if (item_code !== 0) {\r\n      console.log(\"handle blur called with:-\" + item_code);\r\n      user.getItemDetails(item_code).then((resp) => {\r\n        const status = resp.data.status;\r\n        if (status === 1) {\r\n          const {\r\n            item_code,\r\n            brand,\r\n            item_name,\r\n            unit_measurement,\r\n            item_category,\r\n            unit_price,\r\n            quantity,\r\n            supplier_invoice_no,\r\n            stock_entry_date,\r\n          } = resp.data.content;\r\n          console.log(resp.data.content.item_name);\r\n\r\n          setquantity({\r\n            item_code: item_code,\r\n            quantity: quantity,\r\n          });\r\n          setRetailPriceDetails({\r\n            item_code: item_code,\r\n            selling_price: 1, //in place of it will better if call the value from the database and assing it.\r\n          });\r\n          setDetails({\r\n            item_code: item_code,\r\n            brand: brand,\r\n            item_name: item_name,\r\n            unit_measurement: unit_measurement,\r\n            item_category: item_category,\r\n            unit_price: unit_price,\r\n            total_value: \"\",\r\n            quantity: \"\",\r\n            supplier_invoice_no: \"\",\r\n            stock_entry_date: \"\",\r\n          });\r\n        } else {\r\n          setDetails({\r\n            item_code: item_code,\r\n            brand: \"\",\r\n            item_name: \"\",\r\n            unit_measurement: \"\",\r\n            stock_entry_date: \"\",\r\n            item_category: \"\",\r\n            supplier_invoice_no: \"\",\r\n            unit_price: \"\",\r\n            total_value: \"\",\r\n            quantity: \"\",\r\n          });\r\n          setRetailPriceDetails({\r\n            item_code: item_code,\r\n            selling_price: -1,\r\n          });\r\n        }\r\n\r\n        console.log(\"our item obj is:-\");\r\n        console.log(details);\r\n      });\r\n    }\r\n  }\r\n  function setPrevQuantity() {\r\n    if (quantitydetails.quantity !== \"\")\r\n      prvQuantityDetails.push(quantitydetails);\r\n  }\r\n  function steRetailPrice() {\r\n    if (reatailPriceDetails.item_code !== \"\");\r\n    retailDataArray.push(reatailPriceDetails);\r\n  }\r\n  function handleAdd(event) {\r\n    setPrevQuantity();\r\n    steRetailPrice();\r\n    details.supplier_invoice_no = supplierObj.supplier_invoice_number;\r\n    //details.quantity=details.quantity+itemQuant;\r\n    const isAnyEmpty = checkObjectisFilled(details);\r\n    console.log(details);\r\n    console.log(\"some filed of inventory is empty :-\" + isAnyEmpty);\r\n    handleAlert(isAnyEmpty);\r\n    if (!isAnyEmpty) {\r\n      inventoryDetails.push(details);\r\n      setDetails({\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        unit_measurement: \"\",\r\n        stock_entry_date: \"\",\r\n        item_category: \"\",\r\n        supplier_invoice_no: \"\",\r\n        unit_price: \"\",\r\n        total_value: \"\",\r\n        quantity: \"\",\r\n      });\r\n      setquantity({\r\n        item_code: \"\",\r\n        quantity: \"\",\r\n      });\r\n      for (\r\n        let i = inventoryDetails.length - 1;\r\n        i < inventoryDetails.length;\r\n        i++\r\n      ) {\r\n        sumOfQuantity += parseInt(inventoryDetails[i].quantity);\r\n        totalAmount += parseFloat(inventoryDetails[i].total_value);\r\n        break;\r\n      }\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"inv-form crd\">\r\n      <p\r\n        className=\"text-color\"\r\n        style={{ textAlign: \"center\", paddingTop: \"0px\", paddingTop: \"10px\" }}\r\n      >\r\n        Inventory Entry\r\n      </p>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_code\">Item Code</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_code\"\r\n              placeholder=\"Item Code\"\r\n              name=\"item_code\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={details.item_code}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"brand\">Brand</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"brand\"\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              onChange={handleChange}\r\n              value={details.brand}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_name\">Item Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_name\"\r\n              placeholder=\"Item Name\"\r\n              name=\"item_name\"\r\n              onChange={handleChange}\r\n              value={details.item_name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_category\">Item Category</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_category\"\r\n              placeholder=\"Item Category\"\r\n              name=\"item_category\"\r\n              onChange={handleChange}\r\n              value={details.item_category}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"uom\">Unit of measurement</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"uom\"\r\n              placeholder=\"Unit of measurement\"\r\n              name=\"unit_measurement\"\r\n              onChange={handleChange}\r\n              value={details.unit_measurement}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"quantity\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"quantity\"\r\n              placeholder=\"Quantity\"\r\n              name=\"quantity\"\r\n              // onBlur={setPrevQuantity}\r\n              onChange={handleChange}\r\n              value={details.quantity}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"unit_prce\">Unit Price</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"unit_prce\"\r\n              placeholder=\"Unit Price\"\r\n              name=\"unit_price\"\r\n              onChange={handleChange}\r\n              value={details.unit_price}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"total_value\">Total Value</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"total_value\"\r\n              placeholder=\"Total Value\"\r\n              name=\"total_value\"\r\n              value={\r\n                (details.total_value = (\r\n                  details.unit_price * details.quantity\r\n                ).toFixed(2))\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ paddingLeft: \"680px\", paddingBottom: \"20px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleAdd}\r\n        >\r\n          ADD\r\n        </button>\r\n        {/* button created for testing */}\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={checkAllObj}\r\n        >\r\n          check\r\n        </button>\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\">\r\n          UPDATE\r\n        </button>\r\n        <button class=\"btn btn-inv btn-danger\" type=\"submit\">\r\n          REMOVE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvForm;\r\nexport {\r\n  inventoryDetails,\r\n  retailDataArray,\r\n  sumOfQuantity,\r\n  prvQuantityDetails,\r\n  totalAmount,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport { supplierObj } from \"./SupplierForm\";\r\nimport {\r\n  inventoryDetails,\r\n  prvQuantityDetails,\r\n  retailDataArray,\r\n  totalAmount,\r\n} from \"./InvForm\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction MainButton() {\r\n  var count = 0;\r\n  function matchQuantityandValue() {\r\n    for (var i = 0; i < inventoryDetails.length; i++) {\r\n      for (var j = 0; j < prvQuantityDetails.length; j++) {\r\n        if (inventoryDetails[i].item_code == prvQuantityDetails[j].item_code) {\r\n          inventoryDetails[i].quantity =\r\n            parseInt(inventoryDetails[i].quantity) +\r\n            parseInt(prvQuantityDetails[j].quantity);\r\n          inventoryDetails[i].total_value =\r\n            parseInt(inventoryDetails[i].quantity) *\r\n            parseInt(inventoryDetails[i].unit_price);\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //checking object and  array conatin\r\n  function checkAllObj() {\r\n    matchQuantityandValue();\r\n    console.log(\"Inventory array of obj:-\");\r\n    console.log(inventoryDetails);\r\n    console.log(\" Array item quantity in store is :-\");\r\n    console.log(prvQuantityDetails);\r\n    console.log(\" Total Item matched\");\r\n    console.log(count);\r\n    console.log(\"Retail price list\");\r\n    console.log(retailDataArray);\r\n    console.log(\"////////////\");\r\n    console.log(supplierObj.supplier_invoice_value);\r\n    console.log(parseInt(supplierObj.supplier_invoice_value));\r\n    console.log(parseInt(totalAmount));\r\n  }\r\n  function handleSave(event) {\r\n    if (supplierObj.supplier_invoice_value === undefined) {\r\n      Alert.error(\"Error!! Supplier Details are empty!\");\r\n      event.preventDefault();\r\n    } else if (parseInt(totalAmount) == 0) {\r\n      Alert.error(\"Error!! Inventory Table is empty!\");\r\n      event.preventDefault();\r\n    } else if (\r\n      parseInt(totalAmount) === parseInt(supplierObj.supplier_invoice_value)\r\n    ) {\r\n      matchQuantityandValue();\r\n      //inser retail price data\r\n      const x = user.insertInventoryData(inventoryDetails);\r\n      const y = user.insertSupplierDetails(supplierObj);\r\n      const z = user.insertListofRetailPriceData(retailDataArray);\r\n      console.log(x);\r\n      console.log(y);\r\n      console.log(z);\r\n      Alert.success(\"Success!! Details saved successfully!\");\r\n    } else {\r\n      Alert.error(\"Error!! Invoice value and Total do not match!\");\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  function handleCancel() {\r\n    console.log(\"cancel button clicked\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-buttons\">\r\n      <form>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleCancel}\r\n        >\r\n          CANCEL\r\n        </button>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleSave}\r\n        >\r\n          SAVE\r\n        </button>\r\n      </form>\r\n\r\n      {/* <button\r\n        class=\"btn btn-success btn-inv\"\r\n        type=\"submit\"\r\n        onClick={checkAllObj}\r\n      >\r\n        check\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\nexport default MainButton;\r\n","import React,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from './Table';\r\nimport user from '../../service/serviceLayer';\r\nimport MainButton from '../inv-components/MainButton';\r\n\r\nlet a = [];\r\n// {name:\"vaibhav\", mobile:\"5733\", city:\"delhi\"},{name:\"askdghd;a\", mobile:\"353094\", city:\"up\"},{name:\"akfda;s\", mobile:\"873\", city:\"wb\"}\r\nfunction TestForm() {\r\n\r\n    const [details, setDetails] = useState({\r\n        name: \"\",\r\n        mobile: \"\",\r\n        city: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n\r\n        const { name, value } = event.target;\r\n\r\n        setDetails(prevValue => {\r\n            if (name === \"name\") {\r\n                return {\r\n                    name: value,\r\n                    mobile: prevValue.mobile,\r\n                    city: prevValue.city\r\n                };\r\n            } else if (name === \"mobile\") {\r\n                return {\r\n                    name: prevValue.name,\r\n                    mobile: value,\r\n                    city: prevValue.city\r\n                };\r\n            } else if (name === \"city\") {\r\n                return {\r\n                    name: prevValue.name,\r\n                    mobile: prevValue.mobile,\r\n                    city: value\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleclick() { \r\n        a.push(details);\r\n        console.log(a);\r\n        return (\r\n            ReactDOM.render(<Table />, document.getElementById('table'))\r\n        );\r\n    }\r\n\r\n    function handleSave(){\r\n        user.putuser(a);\r\n        //user.getUsers().then(resp => {\r\n\r\n          //  console.log(resp.data);\r\n            //console.log(resp.data[0]);\r\n        //});\r\n    }\r\n\r\n    return (<div>\r\n    <MainButton />\r\n        <input type=\"text\" placeholder=\" your name\" name=\"name\" onChange={handleChange} value={details.name} ></input>\r\n        <input type=\"text\" placeholder=\" your  mobile no\" name=\"mobile\" onChange={handleChange} value={details.mobile} ></input>\r\n        <input type=\"text\" placeholder=\" your city\" name=\"city\" onChange={handleChange} value={details.city} ></input>\r\n        <button type=\"submit\" onClick={handleclick}>submit</button>\r\n        <button type=\"submit\" onClick={handleSave}>save</button>\r\n    </div>)\r\n\r\n\r\n}\r\n\r\nexport default TestForm;\r\nexport {a};","class Auth {\r\n  constructor() {\r\n    this.authenticated = false;\r\n    this.admin = false;\r\n  }\r\n\r\n  login(cb) {\r\n    this.authenticated = true;\r\n    cb();\r\n  }\r\n\r\n  logout(cb) {\r\n    this.authenticated = false;\r\n    cb();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n\r\n  setAdmin() {\r\n    this.admin = true;\r\n  }\r\n\r\n  unsetAdmin() {\r\n    this.admin = false;\r\n  }\r\n\r\n  isPrivileged() {\r\n    return this.admin;\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport auth from \"../../auth-directory/auth\";\r\n\r\nfunction HorizontalNavbar() {\r\n  let history = useHistory();\r\n  function handleLogout() {\r\n    auth.logout(() => {\r\n      history.push(\"/logout\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <p style={{ fontFamily: \"Merriweather\", fontSize: \"21px\" }}>\r\n        INVENTORY & BILLING MANAGEMENT SYSTEM\r\n      </p>\r\n      <button className=\"btn btn-danger\" onClick={handleLogout} hidden={!auth.isAuthenticated()}>\r\n        Logout\r\n      </button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HorizontalNavbar;\r\n","import React, { useState } from \"react\";\r\nimport auth from \"../../auth-directory/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setLoginDetails((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n  }\r\n\r\n  function handleLogin(event) {\r\n    if (loginDetails.username !== \"\" && loginDetails.password !== \"\") {\r\n      user.login(loginDetails.username, loginDetails.password).then((resp) => {\r\n        const status = resp.data.status;\r\n        console.log(status);\r\n        if (status === 1) {\r\n          const { privilege } = resp.data.employee;\r\n          if (privilege === \"ADMIN\") {\r\n            auth.setAdmin();\r\n            const a = auth.isPrivileged();\r\n            console.log(a);\r\n            auth.login(() => {\r\n              history.push(\"/welcome\");\r\n            });\r\n            Alert.success(\"Logged in successfully!!\");\r\n          } else if (privilege === \"LIMITED USER\") {\r\n            auth.unsetAdmin();\r\n            console.log(\"hello\");\r\n            auth.login(() => {\r\n              history.push(\"/welcome\");\r\n            });\r\n          } else {\r\n            Alert.error(\"Not approved for login yet. Contact administrator!\");\r\n          }\r\n        } else if (status === -2) {\r\n          Alert.error(\"User not registered!\");\r\n        } else {\r\n          Alert.error(\"Incorrect password.\");\r\n        }\r\n      });\r\n    } else {\r\n      Alert.error(\"Please enter your credentials\");\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"form\">\r\n        <h3 style={{ fontFamily: \"merriWeather\", color: \"#2A9D8F\" }}>Login</h3>\r\n        <form className=\"login-form\">\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={loginDetails.username}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={loginDetails.password}\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n        <button onClick={handleLogin}>login</button>\r\n        <br></br>\r\n        <br></br>\r\n        <p>\r\n          Not registered yet?\r\n          <Link to=\"/register\"> Click here</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\nimport Login from \"../components/login-components/Login\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar />\r\n      <Login />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction VerticalNavbar() {\r\n  return (\r\n    <div className=\"verticalNavbar\">\r\n      <ul className=\"sticky-verticalNavbar\" style={{width:\"180px\"}}>\r\n        <Link to=\"/inventory\" style={{ textDecoration: \"none\" }}>\r\n          <li className=\"text-color\" style={{ width: \"180px\" }}>\r\n            <a>Inventory</a>\r\n          </li>\r\n        </Link>\r\n        <Link to=\"/billing\" style={{ textDecoration: \"none\" }}>\r\n          <li className=\"text-color\" style={{ width: \"180px\" }}>\r\n            <a>Billing</a>\r\n          </li>\r\n        </Link>\r\n        <Link to=\"/monitoring\" style={{ textDecoration: \"none\" }}>\r\n          <li className=\"text-color\" style={{ width: \"180px\" }}>\r\n            <a>Monitoring</a>\r\n          </li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerticalNavbar;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction RtdBar(props) {\r\n  const totalNoOfItems = props.totalNoOfItems;\r\n  const totalItemValue = props.totalItemValue;\r\n  const today = new Date().toLocaleDateString();\r\n  const now = new Date().toLocaleTimeString();\r\n\r\n  const [date, setDate] = useState(today);\r\n  const [time, setTime] = useState(now);\r\n\r\n  function updateRtdBar() {\r\n    const newDate = new Date().toLocaleDateString();\r\n    const newTime = new Date().toLocaleTimeString();\r\n    setDate(newDate);\r\n    setTime(newTime);\r\n  }\r\n\r\n  setInterval(updateRtdBar, 1000);\r\n\r\n  return (\r\n    <div className=\"row rtdBar\" style={{ marginLeft: \"-2%\" }}>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              NUMBER OF ITEMS\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {totalNoOfItems}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm \">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color text-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              VALUE OF ITEMS\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {totalItemValue}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              DATE\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {date}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              TIME\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {time}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RtdBar;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nfunction InvTable(props) {\r\n  const tableRows = props.tableRows;\r\n  const renderTableColoumn = (tableRows, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{tableRows.item_code}</th>\r\n        <td>{tableRows.brand}</td>\r\n        <td>{tableRows.item_name}</td>\r\n        <td>{tableRows.item_category}</td>\r\n        <td>{tableRows.unit_measurement}</td>\r\n        <td>{tableRows.quantity}</td>\r\n        <td>{tableRows.unit_price}</td>\r\n        <td>{(tableRows.quantity * tableRows.unit_price).toFixed(2)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"inv-table\">\r\n      <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th className=\"sticky-heading\">Item Code</th>\r\n            <th className=\"sticky-heading\">Brand</th>\r\n            <th className=\"sticky-heading\">Item Name</th>\r\n            <th className=\"sticky-heading\">Item Category</th>\r\n            <th className=\"sticky-heading\">Unit Measurement</th>\r\n            <th className=\"sticky-heading\">Quantity</th>\r\n            <th className=\"sticky-heading\">Unit Price</th>\r\n            <th className=\"sticky-heading\">Total Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableRows.map(renderTableColoumn)}\r\n        </tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvTable;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { sumOfQuantity, totalAmount } from \"./InvForm\";\r\n\r\nfunction TotalTable() {\r\n  return (\r\n    <div>\r\n      <div\r\n        class=\"card crd\"\r\n        style={{ width: \"30%\", height: \"50px\", left: \"16%\", top: \"-45px\" }}\r\n      >\r\n        <h4\r\n          class=\"card-title text-color text-bold\"\r\n          style={{ paddingTop: \"12px\" }}\r\n        >\r\n          <span style={{ width: \"50px\", paddingLeft: \"25px\" }}>\r\n            Total Quantity: {sumOfQuantity} nos.\r\n          </span>\r\n        </h4>\r\n      </div>\r\n      <div\r\n        class=\"card crd\"\r\n        style={{ width: \"30%\", height: \"50px\", left: \"65%\", top: \"-95px\" }}\r\n      >\r\n        <h4\r\n          class=\"card-title text-color text-bold\"\r\n          style={{ paddingTop: \"12px\" }}\r\n        >\r\n          <span style={{ width: \"50px\", paddingLeft: \"25px\" }}>\r\n            Total Amout: ₹ {totalAmount.toFixed(2)}\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n    //     <div className=\"total-table\" style={{top:\"1090px\"}}>\r\n    //         <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n    //             <thead className=\"thead-dark\">\r\n    //                 <tr>\r\n    //                     <th style={{width:\"730px\"}}>GRAND TOTAL</th>\r\n    //                     <th style={{width:\"112px\"}}>{sumOfQuantity}</th>\r\n    //                     <th style={{width:\"122px\"}}></th>\r\n    //                     <th>{totalAmount}</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //         </ReactBootStrap.Table>\r\n    //   </div>\r\n  );\r\n}\r\n\r\nexport default TotalTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\nimport VerticalNavbar from \"../components/general-components/VerticalNavbar\";\r\nimport RtdBar from \"../components/inv-components/RtdBar\";\r\nimport SupplierForm from \"../components/inv-components/SupplierForm\";\r\nimport user from \"../service/serviceLayer\";\r\nimport InvForm from \"../components/inv-components/InvForm\";\r\nimport MainButton from \"../components/inv-components/MainButton\";\r\nimport InvTable from \"../components/inv-components/InvTable\";\r\nimport TotalTable from \"../components/inv-components/TotalTable\";\r\nfunction InventoryPage() {\r\n  const [tableRows, setTableRows] = useState([]);\r\n\r\n  const [rtd, setRtd] = useState({\r\n    totalNoOfItems: \"\",\r\n    totalItemValue: \"\",\r\n  });\r\n\r\n  useEffect(getRealTimeData, []);\r\n\r\n  function getRealTimeData() {\r\n    user.getRealTimeData().then((resp) => {\r\n      const { totalNoOfItems, totalItemValue } = resp.data.rtd;\r\n      if(totalNoOfItems === 0) {\r\n        setRtd({\r\n          totalNoOfItems: \"-\",\r\n          totalItemValue: \"-\"\r\n        })\r\n      } else{\r\n      setRtd({\r\n        totalNoOfItems: totalNoOfItems + \" ITEM(S)\",\r\n        totalItemValue: \"₹ \" + totalItemValue,\r\n      });\r\n    }\r\n    });\r\n  }\r\n\r\n  function addRow(details) {\r\n    setTableRows((prevRows) => {\r\n      return [...prevRows, details];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar userName=\"User\" />\r\n      <VerticalNavbar />\r\n      <RtdBar\r\n        totalNoOfItems={rtd.totalNoOfItems}\r\n        totalItemValue={rtd.totalItemValue}\r\n      />\r\n      <SupplierForm />\r\n      <InvForm onAdd={addRow} />\r\n      <InvTable tableRows={tableRows} />\r\n      <TotalTable />\r\n      <MainButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryPage;\r\n","import React, { useState } from \"react\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nlet sumOfQuantity = 0;\r\nlet totalAmount = 0;\r\nconst itemsSoldList = [];\r\nlet arrayOfItemSaleObjects = [];\r\nlet arrayOfQuantityUpdate = [];\r\n\r\nfunction BillForm(props) {\r\n  const [details, setDetails] = useState({//conatins billing obj\r\n    invoice_no: props.billNo,\r\n    item_code: \"\",\r\n    brand: \"\",\r\n    item_name: \"\",\r\n    quantity: \"\",\r\n    unit_measurement: \"\",\r\n    selling_price: \"\",\r\n  });\r\n\r\n  const [updateObject, setUpdateObject] = useState({//contains item code and quantity\r\n    item_code: \"\",\r\n    quantity: \"\",\r\n  });\r\n\r\n  const [isFound, setIsFound] = useState(true); //to enable and disable the quantity field\r\n  const [disableAddButton, setDisableAddButton] = useState(true);\r\n\r\n  function checkAllObj() {\r\n    console.log(\"checking of variable will be done here\");\r\n    console.log(\"item sold list:-\");\r\n    console.log(itemsSoldList);\r\n    console.log(\"Array of ItemSale Object:\");\r\n    console.log(arrayOfItemSaleObjects);\r\n    console.log(\"Array of Quantity Object:\");\r\n    console.log(arrayOfQuantityUpdate);\r\n    console.log(\"Details Object:\");\r\n    console.log(details);\r\n    console.log(\"updateQuantity Object:\");\r\n    console.log(updateObject);\r\n    \r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"item_code\" && value === \"\") {\r\n      props.getQuantityAndPrice(\"\");\r\n      setDisableAddButton(true);\r\n      setDetails({\r\n        invoice_no: props.billNo,\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        quantity: \"\",\r\n        unit_measurement: \"\",\r\n        selling_price: \"\",\r\n      });\r\n    } else {\r\n      setDisableAddButton(false);\r\n      setDetails((prevValue) => {\r\n        return { ...prevValue, [name]: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  function getItemDetailsForSale(item_code) {\r\n    user.getItemDetailsForSale(item_code).then((resp) => {\r\n      const status = resp.data.status;\r\n      //console.log(status);\r\n      if (status === 1) {\r\n        //status 1 is when we have entry in both inventory and retail table\r\n        const {\r\n          item_code,\r\n          brand,\r\n          item_name,\r\n          quantity,\r\n          unit_measurement,\r\n          selling_price,\r\n        } = resp.data.bo; //billing object data to\r\n        if (selling_price === -1) {\r\n          console.log(\"Selling Price not set\");\r\n          Alert.error(\"Entered item is not for sale. Contact manager!\");\r\n          setIsFound(false);\r\n          setDisableAddButton(true);\r\n          setDetails({\r\n            invoice_no: props.billNo,\r\n            item_code: \"\",\r\n            item_name: \"\",\r\n            unit_measurement: \"\",\r\n            quantity: \"\",\r\n            selling_price: \"\",\r\n          });\r\n        } else {\r\n          setIsFound(true);\r\n          setDisableAddButton(false);\r\n          setUpdateObject({\r\n            item_code: item_code,\r\n            quantity: quantity,\r\n          });\r\n          setDetails({\r\n            invoice_no: props.billNo,\r\n            item_code: item_code,\r\n            item_name: brand + \" \" + item_name,\r\n            unit_measurement: unit_measurement,\r\n            quantity: \"\",\r\n            selling_price: selling_price,\r\n          });\r\n          //check weather the item is already in item list\r\n          //if it is then check the list and change update quantity value accordingly\r\n          for (let i = 0; i < itemsSoldList.length; i++) {\r\n            if (itemsSoldList[i].item_code === details.item_code) {\r\n              setUpdateObject({\r\n                item_code: item_code,\r\n                quantity: quantity-itemsSoldList[i].quantity\r\n              });         \r\n            }\r\n\r\n    \r\n          }\r\n        }\r\n      } else if (status === 2) {\r\n        //status 2 is when we have entry only in  inventory and not  retail table\r\n        //the segment will be invoked only if there has been some manual manupulation\r\n        alert(\"The item is NOT ready for sale....\");\r\n        setIsFound(false);\r\n        setDisableAddButton(true);\r\n        setDetails({\r\n          invoice_no: props.billNo,\r\n          item_code: \"\",\r\n          item_name: \"\",\r\n          unit_measurement: \"\",\r\n          quantity: \"\",\r\n          total_value: \"\",\r\n        });\r\n      } else {\r\n        Alert.error(\"Item not found in inventory!\");\r\n        setIsFound(false);\r\n        setDisableAddButton(true);\r\n        setDetails({\r\n          invoice_no: props.billNo,\r\n          item_code: \"\",\r\n          item_name: \"\",\r\n          unit_measurement: \"\",\r\n          quantity: \"\",\r\n          total_value: \"\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const item_code = event.target.value;\r\n    if (item_code !== \"\") {\r\n      console.log(\"blur called with item_code: \" + item_code);\r\n      getItemDetailsForSale(item_code);\r\n      props.getQuantityAndPrice(item_code);//setting up the Quantity and Price card.\r\n\r\n\r\n\r\n    }\r\n  }\r\n  //check function for debuging purpose\r\n  \r\n  function handleAdd(event) {\r\n    if (updateObject.quantity >= details.quantity && details.quantity > 0) {\r\n      arrayOfQuantityUpdate.push({\r\n        item_code: details.item_code,\r\n        quantity: updateObject.quantity - details.quantity,\r\n      });\r\n      // updateItemQuantity(\r\n      //   details.item_code,\r\n      //   updateObject.quantity - details.quantity\r\n      // ); //this will update the quantity and total_value of the items in the inventory table\r\n\r\n      itemsSoldList.push(details); //this is pushing the details object in the array\r\n      arrayOfItemSaleObjects = itemsSoldList.map((item) => {\r\n        return {\r\n          invoice_no: item.invoice_no,\r\n          item_code: item.item_code,\r\n          quantity_sold: item.quantity,\r\n        };\r\n      });\r\n\r\n      console.log(arrayOfItemSaleObjects);\r\n\r\n      props.onAdd(details); //this will add details in the table below\r\n\r\n      setDetails({\r\n        invoice_no: props.billNo,\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        quantity: \"\",\r\n        unit_measurement: \"\",\r\n        selling_price: \"\",\r\n      }); //to make the fields of billForm empty\r\n\r\n      for (let i = itemsSoldList.length - 1; i < itemsSoldList.length; i++) {\r\n        sumOfQuantity += parseInt(itemsSoldList[i].quantity); //adds the total quantity and shows it below the table\r\n        totalAmount += parseFloat(\r\n          itemsSoldList[i].quantity * itemsSoldList[i].selling_price\r\n        ); //adds the total value and shows it below the table\r\n        break;\r\n      }\r\n      Alert.success(\"Item added to the table!\")\r\n    } else if (details.quantity === \"\" || details.quantity === 0) {\r\n      Alert.error(\"Please enter the quantity!\");\r\n    } else {\r\n      Alert.error(\"Entered quantity exceeds the quantity available in store!\");\r\n    }\r\n    setDisableAddButton(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"bill-form crd\">\r\n      <p\r\n        className=\"text-color\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          paddingTop: \"10px\",\r\n          paddingBottom: \"0px\",\r\n        }}\r\n      >\r\n        Items\r\n      </p>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"bill_no\">Bill No.</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"bill_no\"\r\n              placeholder=\"Bill No.\"\r\n              name=\"bill_no\"\r\n             // onChange={handleChange}\r\n              value={props.billNo}\r\n              disabled\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"item_code\">Item Code</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_code\"\r\n              placeholder=\"Item Code\"\r\n              name=\"item_code\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={details.item_code}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_name\">Item Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_name\"\r\n              placeholder=\"Item Name\"\r\n              name=\"item_name\"\r\n              onChange={handleChange}\r\n              value={details.item_name}\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"quantity\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"quantity\"\r\n              placeholder=\"Quantity\"\r\n              name=\"quantity\"\r\n              onChange={handleChange}\r\n              value={details.quantity}\r\n              disabled={!isFound}\r\n              // onBlur={setPrevQuantity}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ paddingLeft: \"840px\", paddingBottom: \"20px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleAdd}\r\n          disabled={disableAddButton}\r\n        >\r\n          ADD\r\n        </button>\r\n        {/* button created for testing */}\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={checkAllObj}\r\n        >\r\n          check\r\n        </button> \r\n        <button class=\"btn btn-inv btn-danger\" type=\"submit\">\r\n          REMOVE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillForm;\r\nexport {\r\n  arrayOfItemSaleObjects,\r\n  itemsSoldList,\r\n  arrayOfQuantityUpdate,\r\n  sumOfQuantity,\r\n  totalAmount,\r\n  \r\n};\r\n","import React from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles.css\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nfunction BillTable(props) {\r\n  const tableRows = props.tableRows;\r\n  const renderTableColoumn = (tableRows, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{index+1}</th>\r\n        <td>{tableRows.item_name}</td>\r\n        <td>{tableRows.quantity}</td>\r\n        <td>{tableRows.selling_price}</td>\r\n        <td>{(tableRows.quantity * tableRows.selling_price).toFixed(2)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"bill-table\">\r\n      <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th className=\"sticky-heading\">S. No.</th>\r\n            <th className=\"sticky-heading\">Item</th>\r\n            <th className=\"sticky-heading\">Quantity</th>\r\n            <th className=\"sticky-heading\">Price (per Unit)</th>\r\n            <th className=\"sticky-heading\">Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableRows.map(renderTableColoumn)}\r\n        </tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillTable;\r\n","import React, { useState } from \"react\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport {totalAmount} from\"./BillForm\";\r\n\r\nlet invoice = {\r\n  invoice_no: \"\",\r\n  mobile_no: \"\",\r\n  customer_name: \"\",\r\n  invoice_value: \"\",\r\n  email_id: \"\",\r\n  billing_date: \"\",\r\n};\r\n\r\n\r\nfunction CustomerForm(props) {\r\n  const [customerDetails, setCustomerDetails] = useState({\r\n    mobile_no: \"\",\r\n    customer_name: \"\",\r\n    email_id: \"\",\r\n    invoice_value: \"\",\r\n    billing_date: \"\",\r\n  });\r\n \r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"mobile_no\" && value === \"\") {\r\n      setCustomerDetails({\r\n        mobile_no: \"\",\r\n        customer_name: \"\",\r\n        email_id: \"\",\r\n        invoice_value: \"\",\r\n        billing_date: \"\",\r\n      });\r\n    } else {\r\n      setCustomerDetails((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value,\r\n          billing_date:\r\n            new Date().getFullYear().toString() +\r\n            \"-\" +\r\n            (new Date().getMonth() + 1).toString() +\r\n            \"-\" +\r\n            new Date().getDate().toString(),\r\n        };\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  function getCustomerDetails(mobile_no) {\r\n    user.getCustomerDetails(mobile_no).then((resp) => {\r\n      const status = resp.data.status;\r\n      console.log(status);\r\n      if (status !== 0) {\r\n        const { mobile_no, customer_name, email_id } = resp.data.contentinvoice;\r\n        setCustomerDetails({\r\n          mobile_no: mobile_no,\r\n          customer_name: customer_name,\r\n          email_id: email_id,\r\n          invoice_value: \"\",\r\n          billing_date:\r\n            new Date().getFullYear().toString() +\r\n            \"-\" +\r\n            (new Date().getMonth() + 1).toString() +\r\n            \"-\" +\r\n            new Date().getDate().toString(),\r\n        });\r\n      } else {\r\n        setCustomerDetails({\r\n          mobile_no: mobile_no,\r\n          customer_name: \"\",\r\n          email_id: \"\",\r\n          invoice_value: \"\",\r\n          billing_date: \"\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const mobile_no = event.target.value;\r\n    if (mobile_no !== 0) {\r\n      console.log(\"blur called with mobile no: \" + mobile_no);\r\n      getCustomerDetails(mobile_no);\r\n    }\r\n  }\r\n\r\n  function handleAdd() {\r\n    invoice = {\r\n      invoice_no: props.billNo,\r\n      mobile_no: customerDetails.mobile_no,\r\n      customer_name: customerDetails.customer_name,\r\n      invoice_value: customerDetails.invoice_value,\r\n      email_id: customerDetails.email_id,\r\n      billing_date: customerDetails.billing_date,\r\n    };\r\n  }\r\n\r\n  //check function for debuging purpose\r\n  function checkAllObj() {\r\n    console.log(\"checking of variable will be done here\");\r\n    console.log(\"Details:-\");\r\n    console.log(customerDetails);\r\n    console.log(\"amaount recived is:\")\r\n    console.log(customerDetails.invoice_value);\r\n    console.log(totalAmount);\r\n    console.log(totalAmount<=customerDetails.invoice_value);\r\n  }\r\n  return (\r\n    <div className=\"customer-form crd\">\r\n      <p\r\n        className=\"text-color\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          paddingTop: \"10px\",\r\n          paddingBottom: \"0px\",\r\n        }}\r\n      >\r\n        Customer Details\r\n      </p>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"mobile_no\">Mobile No.</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"mobile_no\"\r\n              placeholder=\"Mobile No.\"\r\n              name=\"mobile_no\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={customerDetails.mobile_no}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"customer_name\">Customer Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customer_name\"\r\n              placeholder=\"Customer Name\"\r\n              name=\"customer_name\"\r\n              onChange={handleChange}\r\n              value={customerDetails.customer_name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"email_id\">E-mail ID</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"email_id\"\r\n              placeholder=\"E-mail ID\"\r\n              name=\"email_id\"\r\n              onChange={handleChange}\r\n              value={customerDetails.email_id}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"amount_received\">Amount Received</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"invoice_value\"\r\n              placeholder=\"Amount Received\"\r\n              name=\"invoice_value\"\r\n              onChange={handleChange}\r\n              value={customerDetails.invoice_value}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ paddingLeft: \"900px\", paddingBottom: \"20px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleAdd}\r\n        >\r\n          ADD\r\n        </button>\r\n        {/* button created for testing */}\r\n         {/* <button\r\n        class=\"btn btn-success btn-inv\"\r\n        type=\"submit\"\r\n        onClick={checkAllObj}\r\n      >\r\n        check\r\n      </button>  */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerForm;\r\nexport { invoice };\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { sumOfQuantity, totalAmount } from \"./BillForm\";\r\n\r\nfunction TotalTable() {\r\n  return (\r\n    <div>\r\n      <div\r\n        class=\"card crd\"\r\n        style={{ width: \"30%\", height: \"50px\", left: \"16%\", top: \"-390px\" }}\r\n      >\r\n        <h4\r\n          class=\"card-title text-color text-bold\"\r\n          style={{ paddingTop: \"12px\" }}\r\n        >\r\n          <span style={{ width: \"50px\", paddingLeft: \"25px\" }}>\r\n            Total Quantity: {sumOfQuantity} nos.\r\n          </span>\r\n        </h4>\r\n      </div>\r\n      <div\r\n        class=\"card crd\"\r\n        style={{ width: \"30%\", height: \"50px\", left: \"65%\", top: \"-440px\" }}\r\n      >\r\n        <h4\r\n          class=\"card-title text-color text-bold\"\r\n          style={{ paddingTop: \"12px\" }}\r\n        >\r\n          <span style={{ width: \"50px\", paddingLeft: \"25px\" }}>\r\n            Total Amout: ₹ {totalAmount.toFixed(2)}\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n    //     <div className=\"total-table\" style={{top:\"1090px\"}}>\r\n    //         <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n    //             <thead className=\"thead-dark\">\r\n    //                 <tr>\r\n    //                     <th style={{width:\"730px\"}}>GRAND TOTAL</th>\r\n    //                     <th style={{width:\"112px\"}}>{sumOfQuantity}</th>\r\n    //                     <th style={{width:\"122px\"}}></th>\r\n    //                     <th>{totalAmount}</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //         </ReactBootStrap.Table>\r\n    //   </div>\r\n  );\r\n}\r\n\r\nexport default TotalTable;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction RtdBar(props) {\r\n  const itemPrice = props.quantityAndPrice.itemPrice;\r\n  const availableQuantity = props.quantityAndPrice.availableQuantity;\r\n  const today = new Date().toLocaleDateString();\r\n  const now = new Date().toLocaleTimeString();\r\n\r\n  const [date, setDate] = useState(today);\r\n  const [time, setTime] = useState(now);\r\n\r\n  function updateRtdBar() {\r\n    const newDate = new Date().toLocaleDateString();\r\n    const newTime = new Date().toLocaleTimeString();\r\n    setDate(newDate);\r\n    setTime(newTime);\r\n  }\r\n\r\n  setInterval(updateRtdBar, 1000);\r\n\r\n  return (\r\n    <div className=\"row rtdBar\" style={{ marginLeft: \"-2%\" }}>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              QUANTITY\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {availableQuantity}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm \">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color text-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              PRICE\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {itemPrice}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              DATE\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {date}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              TIME\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {time}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RtdBar;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport {\r\n  arrayOfItemSaleObjects,\r\n  arrayOfQuantityUpdate,\r\n  totalAmount,\r\n} from \"./BillForm\";\r\nimport { invoice } from \"./CustomerForm\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction checkAll() {\r\n  console.log(\"invoices details:\");\r\n  console.log(invoice.mobile_no != \"\");\r\n  console.log(\"Total Amount:\");\r\n  console.log(totalAmount);\r\n  console.log(totalAmount <= invoice.invoice_value);\r\n}\r\nfunction MainButton() {\r\n  function handleSave(event) {\r\n    if (invoice.mobile_no != \"\" && invoice.customer_name != \"\") {\r\n      if (totalAmount == 0) {\r\n        Alert.error(\"Error! No items in the table!\");\r\n        event.preventDefault();\r\n      } else if (invoice.invoice_value == 0) {\r\n        Alert.error(\"Please enter the amount received from the customer!\");\r\n        event.preventDefault();\r\n      } else if (totalAmount <= invoice.invoice_value) {\r\n        //console.log(arrayOfQuantityUpdate);\r\n        const x = user.insertListOfItems(arrayOfItemSaleObjects);\r\n        const y = user.insertInvoice(invoice);\r\n        const z = user.updateItemQuantity(arrayOfQuantityUpdate);\r\n        console.log(x);\r\n        console.log(y);\r\n        console.log(z);\r\n        Alert.success(\r\n          \"Bill no. \" + invoice.invoice_no + \" generated successfully!\"\r\n        );\r\n      }\r\n      //event.preventDefault();\r\n      else {\r\n        Alert.error(\"Amount received is less than the total bill value!\");\r\n        event.preventDefault();\r\n      }\r\n    } else {\r\n      Alert.error(\"Please enter the mobile no. & name of the customer!\");\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"main-buttons\">\r\n      <form>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleSave}\r\n        >\r\n          PRINT\r\n        </button>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          // onClick={handleCancel}\r\n        >\r\n          CANCEL\r\n        </button>\r\n      </form>\r\n      {/* <button\r\n        class=\"btn btn-success btn-inv\"\r\n        type=\"submit\"\r\n        onClick={checkAll}\r\n      >\r\n        check\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\nexport default MainButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BillForm from \"../components/billing-components/BillForm\";\r\nimport BillTable from \"../components/billing-components/BillTable\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\nimport CustomerForm from \"../components/billing-components/CustomerForm\";\r\nimport VerticalNavbar from \"../components/general-components/VerticalNavbar\";\r\nimport user from \"../service/serviceLayer\";\r\nimport TotalTable from \"../components/billing-components/TotalTable\";\r\nimport RtdBar from \"../components/billing-components/RtdBar\";\r\nimport MainButton from \"../components/billing-components/MainButton\";\r\n\r\nfunction BillingPage() {\r\n  const [tableRows, setTableRows] = useState([]);\r\n\r\n  const [billNo, setBillNo] = useState(\"\");\r\n\r\n  useEffect(getBillNO, []);\r\n\r\n  const [quantityAndPrice, setQuantityAndPrice] = useState({\r\n    availableQuantity: \"-\",\r\n    itemPrice: \"-\",\r\n  });\r\n\r\n  const getQuantityAndPrice = (item_code) => {\r\n    if (item_code !== \"\") {\r\n      user.getItemDetailsForSale(item_code).then((resp) => {\r\n        const status = resp.data.status;\r\n        if (status === 1) {\r\n          setQuantityAndPrice({\r\n            availableQuantity: resp.data.bo.quantity + \" nos.\",\r\n            itemPrice: \"₹ \" + resp.data.bo.selling_price,\r\n          });\r\n        } else {\r\n          setQuantityAndPrice({\r\n            availableQuantity: resp.data.bo.quantity + \" nos.\",\r\n            itemPrice: \"-\",\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      setQuantityAndPrice({\r\n        availableQuantity: \"-\",\r\n        itemPrice: \"-\",\r\n      });\r\n    }\r\n  };\r\n\r\n  function getBillNO() {\r\n    user.getSaleInvoiceNo().then((rsp) => {\r\n      const billNo = rsp.data;\r\n      setBillNo(billNo);\r\n    });\r\n  }\r\n\r\n  function addRow(details) {\r\n    setTableRows((prevRows) => {\r\n      return [...prevRows, details];\r\n    }); //Check here, how to update quantity of an item in real time\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar userName=\"User\" />\r\n      <VerticalNavbar />\r\n      <RtdBar quantityAndPrice={quantityAndPrice} />\r\n      <BillForm\r\n        billNo={billNo}\r\n        onAdd={addRow}\r\n        getQuantityAndPrice={(item_code) => {\r\n          getQuantityAndPrice(item_code);\r\n        }}\r\n      />\r\n      <CustomerForm billNo={billNo} />\r\n      <BillTable tableRows={tableRows} />\r\n      <TotalTable />\r\n      <MainButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BillingPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LogoutPage() {\r\n  return (\r\n    <div>\r\n      <h1>Logged out successfully!</h1>\r\n      <Link to=\"/\">\r\n        <u>Click here to login again</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogoutPage;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction RtdBar(props) {\r\n  const todaysSale = props.todaysSale;\r\n  const noOfItemsWithoutSp = props.noOfItemsWithoutSp;\r\n  const today = new Date().toLocaleDateString();\r\n  const now = new Date().toLocaleTimeString();\r\n\r\n  const [date, setDate] = useState(today);\r\n  const [time, setTime] = useState(now);\r\n\r\n  function updateRtdBar() {\r\n    const newDate = new Date().toLocaleDateString();\r\n    const newTime = new Date().toLocaleTimeString();\r\n    setDate(newDate);\r\n    setTime(newTime);\r\n  }\r\n\r\n  setInterval(updateRtdBar, 1000);\r\n\r\n  return (\r\n    <div className=\"row rtdBar\" style={{ marginLeft: \"-2%\" }}>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              TODAY'S SALE\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n            {todaysSale}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm \">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body \">\r\n            <h5\r\n              class=\"card-title text-center text-color text-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              SP TO SET\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {noOfItemsWithoutSp}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              DATE\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {date}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card crd\">\r\n          <div class=\"card-body\">\r\n            <h5\r\n              class=\"card-title text-center text-color fw-bold\"\r\n              style={{ padding: \"0px\" }}\r\n            >\r\n              TIME\r\n            </h5>\r\n            <h4 class=\"card-text text-center\" style={{ padding: \"0px\" }}>\r\n              {time}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RtdBar;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nfunction PurchaseReport(props) {\r\n\r\n    const renderTableColoumn = (supplier, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{supplier.supplier_name}</td>\r\n            <td>{supplier.supplier_code}</td>\r\n            <td>{supplier.supplier_invoice_number}</td>\r\n            <td>{supplier.purchase_date}</td>\r\n            <td>₹ {supplier.supplier_invoice_value}</td>\r\n          </tr>\r\n        );\r\n      };\r\n\r\n  return (\r\n    <div className=\"purchasereport-table\" hidden={props.hidePurchaseTable}>\r\n      <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th className=\"sticky-heading\">Supplier Name</th>\r\n            <th className=\"sticky-heading\">Supplier Code</th>\r\n            <th className=\"sticky-heading\">Supplier Invoice No.</th>\r\n            <th className=\"sticky-heading\">Purchase Date</th>\r\n            <th className=\"sticky-heading\">Invoice Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{props.purchaseReport.map(renderTableColoumn)}</tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PurchaseReport;\r\n","import React from 'react';\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nfunction SalesReport(props) {\r\n    const renderTableColoumn = (customer, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{customer.customer_name}</td>\r\n            <td>{customer.mobile_no}</td>\r\n            <td>{customer.invoice_no}</td>\r\n            <td>{customer.billing_date}</td>\r\n            <td>₹ {customer.invoice_value}</td>\r\n          </tr>\r\n        );\r\n      };\r\n\r\n  return (\r\n    <div className=\"salesreport-table\" hidden={props.hideSalesTable}>\r\n      <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th className=\"sticky-heading\">Customer Name</th>\r\n            <th className=\"sticky-heading\">Customer Mobile No.</th>\r\n            <th className=\"sticky-heading\">Customer Invoice No.</th>\r\n            <th className=\"sticky-heading\">Purchase Date</th>\r\n            <th className=\"sticky-heading\">Invoice Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{props.salesReport.map(renderTableColoumn)}</tbody>\r\n      </ReactBootStrap.Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalesReport;","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport PurchaseReport from \"./PurchaseReport\";\r\nimport SalesReport from \"./SalesReport\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction SearchReportForm(props) {\r\n  const [reportType, setReportType] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [hidePurchaseTable, setHidePurchaseTable] = useState(true);\r\n  const [hideSalesTable, setHideSalesTable] = useState(true);\r\n  const [purchaseReport, setPurchaseReport] = useState([]);\r\n  const [salesReport, setSalesReport] = useState([]);\r\n  const [reportOpen, setReportOpen] = useState(\"search-report-close\");\r\n\r\n  function clearTable() {\r\n    setReportType(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    setHidePurchaseTable(true);\r\n    setPurchaseReport([]);\r\n    setHideSalesTable(true);\r\n    setSalesReport([]);\r\n    setReportOpen(\"search-report-close\");\r\n  }\r\n\r\n  function handleClick() {\r\n    if (reportType === \"purchaseReport\" && startDate !== \"\" && endDate !== \"\") {\r\n      setHideSalesTable(true);\r\n      const sd =\r\n        startDate.getFullYear() +\r\n        \"-\" +\r\n        (startDate.getMonth() + 1) +\r\n        \"-\" +\r\n        startDate.getDate();\r\n      const ed =\r\n        endDate.getFullYear() +\r\n        \"-\" +\r\n        (endDate.getMonth() + 1) +\r\n        \"-\" +\r\n        endDate.getDate();\r\n\r\n      user.getPruchaseReport(sd, ed).then((resp) => {\r\n        const status = resp.data.status;\r\n        if (status === 1) {\r\n          setReportOpen(\"search-report-open\");\r\n          setPurchaseReport(resp.data.supplierdtls);\r\n          setHidePurchaseTable(false);\r\n        } else {\r\n          setReportOpen(\"search-report-close\");\r\n          Alert.error(\"No details found for these dates!\");\r\n          setHidePurchaseTable(true);\r\n        }\r\n      });\r\n    } else if (\r\n      reportType === \"salesReport\" &&\r\n      startDate !== \"\" &&\r\n      endDate !== \"\"\r\n    ) {\r\n      setHidePurchaseTable(true);\r\n      const sd =\r\n        startDate.getFullYear() +\r\n        \"-\" +\r\n        (startDate.getMonth() + 1) +\r\n        \"-\" +\r\n        startDate.getDate();\r\n      const ed =\r\n        endDate.getFullYear() +\r\n        \"-\" +\r\n        (endDate.getMonth() + 1) +\r\n        \"-\" +\r\n        endDate.getDate();\r\n\r\n      user.getSalesReport(sd, ed).then((resp) => {\r\n        const status = resp.data.status;\r\n        if (status === 1) {\r\n          setReportOpen(\"search-report-open\");\r\n          setSalesReport(resp.data.invoiceList);\r\n          console.log(salesReport);\r\n          setHideSalesTable(false);\r\n        } else {\r\n          setReportOpen(\"search-report-close\");\r\n          Alert.error(\"No details found for these dates!\");\r\n          setHideSalesTable(true);\r\n        }\r\n      });\r\n    } else {\r\n      clearTable();\r\n      Alert.error(\"Error! Fields empty!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={reportOpen}>\r\n      <div style={{ height: \"50px\" }}>\r\n        <p\r\n          className=\"text-color\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            paddingTop: \"0px\",\r\n            paddingBottom: \"0px\",\r\n          }}\r\n        >\r\n          Generate Report\r\n        </p>\r\n        <Link to=\"/monitoring\">\r\n          <button\r\n            className=\"btn btn-inv btn-success btn-sm\"\r\n            style={{ position: \"absolute\", left: \"1010px\", top: \"10px\", height:\"min-content\" }}\r\n          >\r\n            <b>CLOSE</b>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <form style={{ width: \"100%\" }}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-3\">\r\n            <span\r\n              style={{ position: \"absolute\", width: \"225px\", left: \"20px\" }}\r\n            >\r\n              <label for=\"reportType\">Type of Report</label>\r\n              <select\r\n                className=\"form-control\"\r\n                onChange={(event) => {\r\n                  setReportType(event.target.value);\r\n                }}\r\n              >\r\n                <option className=\"form-control\" id=\"reportType\" value=\"\">\r\n                  ---Select Report Type---\r\n                </option>\r\n                <option\r\n                  className=\"form-control\"\r\n                  id=\"reportType\"\r\n                  value=\"purchaseReport\"\r\n                >\r\n                  Purchase Report\r\n                </option>\r\n                <option\r\n                  className=\"form-control\"\r\n                  id=\"reportType\"\r\n                  value=\"salesReport\"\r\n                >\r\n                  Sales Report\r\n                </option>\r\n              </select>\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"300px\",\r\n                width: \"225px\",\r\n              }}\r\n            >\r\n              <label for=\"startDate\">Start Date</label>\r\n              <DatePicker\r\n                className=\"form-control date-picker\"\r\n                id=\"startDate\"\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                maxDate={new Date()}\r\n                showYearDropdown\r\n                scrollableMonthYearDropdown\r\n                value={startDate}\r\n              />\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"570px\",\r\n                width: \"225px\",\r\n              }}\r\n            >\r\n              <label for=\"endDate\">End Date</label>\r\n              <DatePicker\r\n                className=\"form-control date-picker\"\r\n                id=\"endDate\"\r\n                selected={endDate}\r\n                onChange={(date) => setEndDate(date)}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                maxDate={new Date()}\r\n                showYearDropdown\r\n                scrollableMonthYearDropdown\r\n                value={endDate}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <button\r\n          style={{ position: \"absolute\", left: \"860px\" }}\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleClick}\r\n        >\r\n          SEARCH\r\n        </button>\r\n        <button\r\n          style={{ position: \"absolute\", left: \"990px\" }}\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={clearTable}\r\n        >\r\n          CLEAR\r\n        </button>\r\n        {/* button created for testing */}\r\n        {/* <button\r\n    class=\"btn btn-success btn-inv\"\r\n    type=\"submit\"\r\n    onClick={checkAllObj}\r\n  >\r\n    check\r\n  </button> */}\r\n      </div>\r\n      <PurchaseReport\r\n        hidePurchaseTable={hidePurchaseTable}\r\n        purchaseReport={purchaseReport}\r\n      />\r\n      <SalesReport hideSalesTable={hideSalesTable} salesReport={salesReport} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchReportForm;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction InventoryItemTable(props) {\r\n  const tableRows = props.tableRows;\r\n\r\n  const renderTableColoumn = (tableRows, index) => {\r\n    function checkPrice(selling_price) {\r\n      if (selling_price >= 0) {\r\n        return selling_price;\r\n      } else {\r\n        return \"NOT SET\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{tableRows.item_code}</th>\r\n        <td>{tableRows.brand}</td>\r\n        <td>{tableRows.item_name}</td>\r\n        <td>{tableRows.quantity}</td>\r\n        <td>{tableRows.unit_measurement}</td>\r\n        <td>₹ {tableRows.unit_price}</td>\r\n        <td>₹ {checkPrice(tableRows.selling_price)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"inventory-item-table crd\">\r\n      <span>\r\n        <p\r\n          className=\"text-color\"\r\n          style={{ textAlign: \"center\", paddingTop: \"0px\", paddingTop: \"10px\" }}\r\n        >\r\n          Inventory Data\r\n        </p>\r\n        <Link to=\"/monitoring\">\r\n          <button\r\n            className=\"btn btn-inv btn-success btn-sm\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"1010px\",\r\n              top: \"10px\",\r\n            }}\r\n          >\r\n            <b>CLOSE</b>\r\n          </button>\r\n        </Link>\r\n      </span>\r\n      <div>\r\n        <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th className=\"sticky-heading\">Item Code</th>\r\n              <th className=\"sticky-heading\">Brand</th>\r\n              <th className=\"sticky-heading\">Item Name</th>\r\n              <th className=\"sticky-heading\">Quantity</th>\r\n              <th className=\"sticky-heading\">Unit Measurement</th>\r\n              <th className=\"sticky-heading\">Cost Price</th>\r\n              <th className=\"sticky-heading\">Selling Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{tableRows.map(renderTableColoumn)}</tbody>\r\n        </ReactBootStrap.Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryItemTable;\r\n","import React, { useState } from \"react\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction UpdateForm() {\r\n  const [itemDetails, setItemDetails] = useState({\r\n    item_code: \"\",\r\n    brand: \"\",\r\n    item_name: \"\",\r\n    item_category: \"\",\r\n    unit_measurement: \"\",\r\n    quantity: \"\",\r\n    unit_price: \"\",\r\n    selling_price: \"\",\r\n  });\r\n  const [hideUpdateForm, setHideUpdateForm] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"item_code\" && value === \"\") {\r\n      setItemDetails({\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        item_category: \"\",\r\n        unit_measurement: \"\",\r\n        quantity: \"\",\r\n        unit_price: \"\",\r\n        selling_price: \"\",\r\n      });\r\n    } else {\r\n      setItemDetails((prevValue) => {\r\n        return { ...prevValue, [name]: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  function clearForm() {\r\n    setItemDetails({\r\n      item_code: \"\",\r\n      brand: \"\",\r\n      item_name: \"\",\r\n      item_category: \"\",\r\n      unit_measurement: \"\",\r\n      quantity: \"\",\r\n      unit_price: \"\",\r\n      selling_price: \"\",\r\n    });\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const item_code = event.target.value;\r\n\r\n    if (item_code !== \"\") {\r\n      console.log(\"handle blur called with:-\" + item_code);\r\n      user.getItemDetails(item_code).then((resp1) => {\r\n        user.getItemDetailsForSale(item_code).then((resp2) => {\r\n          const status1 = resp1.data.status;\r\n          const status2 = resp2.data.status;\r\n          const {\r\n            item_code,\r\n            brand,\r\n            item_name,\r\n            item_category,\r\n            unit_measurement,\r\n            quantity,\r\n            unit_price,\r\n          } = resp1.data.content;\r\n          const { selling_price } = resp2.data.bo;\r\n          console.log(item_name);\r\n          console.log(selling_price);\r\n          console.log(status1);\r\n          console.log(status2);\r\n          if (status1 === 1 && status2 === 1 && selling_price >= 0) {\r\n            setItemDetails({\r\n              item_code: item_code,\r\n              brand: brand,\r\n              item_name: item_name,\r\n              item_category: item_category,\r\n              unit_measurement: unit_measurement,\r\n              quantity: quantity,\r\n              unit_price: unit_price,\r\n              selling_price: selling_price,\r\n            });\r\n          } else if (status1 === 1 && status2 === 1) {\r\n            setItemDetails({\r\n              item_code: item_code,\r\n              brand: brand,\r\n              item_name: item_name,\r\n              item_category: item_category,\r\n              unit_measurement: unit_measurement,\r\n              quantity: quantity,\r\n              unit_price: unit_price,\r\n              selling_price: \"NOT SET\",\r\n            });\r\n          } else {\r\n            setItemDetails({\r\n              item_code: \"\",\r\n              brand: \"\",\r\n              item_name: \"\",\r\n              item_category: \"\",\r\n              unit_measurement: \"\",\r\n              quantity: \"\",\r\n              unit_price: \"\",\r\n              selling_price: \"\",\r\n            });\r\n            Alert.error(\"Error! Item not found in inventory!\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleUpdate() {\r\n    if (itemDetails.item_code !== \"\") {\r\n      user.updateInventoryAndSellingPriceData(itemDetails).then((resp) => {\r\n        const { status, reason } = resp.data;\r\n        console.log(status);\r\n        console.log(reason);\r\n      });\r\n      setItemDetails({\r\n        item_code: \"\",\r\n        brand: \"\",\r\n        item_name: \"\",\r\n        item_category: \"\",\r\n        unit_measurement: \"\",\r\n        quantity: \"\",\r\n        unit_price: \"\",\r\n        selling_price: \"\",\r\n      });\r\n    } else {\r\n      Alert.error(\"Fields are empty!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"update-form crd\">\r\n      <div style={{ height: \"50px\" }}>\r\n        <p\r\n          className=\"text-color\"\r\n          style={{ textAlign: \"center\", paddingTop: \"0px\", paddingTop: \"10px\" }}\r\n        >\r\n          Update Inventory\r\n        </p>\r\n        <Link to=\"/monitoring/checkinventory\">\r\n          <button\r\n            className=\"btn btn-inv btn-success btn-sm\"\r\n            style={{ position: \"relative\", left: \"1000px\", top: \"-61px\" }}\r\n          >\r\n            <b>CLOSE</b>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_code\">Item Code</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_code\"\r\n              placeholder=\"Item Code\"\r\n              name=\"item_code\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={itemDetails.item_code}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"brand\">Brand</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"brand\"\r\n              placeholder=\"Brand\"\r\n              name=\"brand\"\r\n              onChange={handleChange}\r\n              value={itemDetails.brand}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_name\">Item Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_name\"\r\n              placeholder=\"Item Name\"\r\n              name=\"item_name\"\r\n              onChange={handleChange}\r\n              value={itemDetails.item_name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"item_category\">Item Category</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"item_category\"\r\n              placeholder=\"Item Category\"\r\n              name=\"item_category\"\r\n              onChange={handleChange}\r\n              value={itemDetails.item_category}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"uom\">Unit of measurement</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"uom\"\r\n              placeholder=\"Unit of measurement\"\r\n              name=\"unit_measurement\"\r\n              onChange={handleChange}\r\n              value={itemDetails.unit_measurement}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"quantity\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"quantity\"\r\n              placeholder=\"Quantity\"\r\n              name=\"quantity\"\r\n              // onBlur={setPrevQuantity}\r\n              onChange={handleChange}\r\n              value={itemDetails.quantity}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"unit_prce\">Unit Price</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"unit_prce\"\r\n              placeholder=\"Unit Price\"\r\n              name=\"unit_price\"\r\n              onChange={handleChange}\r\n              value={itemDetails.unit_price}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"selling_price\">Selling Price</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"selling_price\"\r\n              placeholder=\"Selling Price\"\r\n              name=\"selling_price\"\r\n              onChange={handleChange}\r\n              value={itemDetails.selling_price}\r\n              onClick={(event) => {\r\n                if (event.target.value === \"NOT SET\") {\r\n                  return (event.target.value = \"\");\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ paddingLeft: \"680px\", paddingBottom: \"20px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleUpdate}\r\n        >\r\n          UPDATE\r\n        </button>\r\n        {/* button created for testing */}\r\n        {/* <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          //   onClick={checkAllObj}\r\n        >\r\n          check\r\n        </button> */}\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={clearForm}\r\n        >\r\n          CLEAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;\r\n","import React from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UserTable(props) {\r\n  const tableRows = props.tableRows;\r\n\r\n  const renderTableColoumn = (tableRows, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{tableRows.empId}</th>\r\n        <td>\r\n          {tableRows.name}\r\n        </td>\r\n        <td>{tableRows.email}</td>\r\n        <td>{tableRows.privilege}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-table crd\">\r\n      <span>\r\n        <p\r\n          className=\"text-color\"\r\n          style={{ textAlign: \"center\", paddingTop: \"0px\", paddingTop: \"10px\" }}\r\n        >\r\n          Employee Data\r\n        </p>\r\n        <Link to=\"/monitoring\">\r\n          <button\r\n            className=\"btn btn-inv btn-success btn-sm\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"1010px\",\r\n              top: \"10px\",\r\n            }}\r\n          >\r\n            <b>CLOSE</b>\r\n          </button>\r\n        </Link>\r\n      </span>\r\n      <div>\r\n        <ReactBootStrap.Table striped bordered className=\"table-sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th className=\"sticky-heading\">Employee ID</th>\r\n              <th className=\"sticky-heading\">Employee Name</th>\r\n              <th className=\"sticky-heading\">Email ID</th>\r\n              <th className=\"sticky-heading\">Privilege</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{tableRows.map(renderTableColoumn)}</tbody>\r\n        </ReactBootStrap.Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserTable;\r\n","import React, { useState } from \"react\";\r\nimport user from \"../../../service/serviceLayer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SetEmployeeForm() {\r\n  const [empDetails, setEmpDetails] = useState({\r\n    empId: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    privilege: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    if (name === \"empId\" && value === \"\") {\r\n      setEmpDetails({\r\n        empId: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        privilege: \"\",\r\n      });\r\n    } else {\r\n      setEmpDetails((prevValue) => {\r\n        return { ...prevValue, [name]: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmpDetails({\r\n      empId: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      privilege: \"\",\r\n    });\r\n  }\r\n\r\n  function handleBlur(event) {\r\n    const empId = event.target.value;\r\n\r\n    if (empId !== \"\") {\r\n      console.log(\"handle blur called with: \" + empId);\r\n      user.getEmployeeDetails(empId).then((resp) => {\r\n        const status = resp.data.status;\r\n        console.log(status);\r\n        if (status === 1) {\r\n          const {\r\n            empId,\r\n            name,\r\n            password,\r\n            email,\r\n            privilege,\r\n          } = resp.data.employee;\r\n          if (privilege === \"NOT SET\") {\r\n            setEmpDetails({\r\n              empId: empId,\r\n              name: name,\r\n              password: password,\r\n              email: email,\r\n              privilege: \"\",\r\n            });\r\n          } else {\r\n            setEmpDetails({\r\n              empId: empId,\r\n              name: name,\r\n              password: password,\r\n              email: email,\r\n              privilege: privilege,\r\n            });\r\n          }\r\n        } else {\r\n          setEmpDetails({\r\n            empId: empId,\r\n            name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            privilege: \"\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleUpdate() {\r\n    if (empDetails.empId !== \"\") {\r\n      user.updateEmployeeDetails(empDetails).then((resp) => {\r\n        const { status, reason } = resp.data;\r\n        console.log(status);\r\n        console.log(reason);\r\n      });\r\n      setEmpDetails({\r\n        empId: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        privilege: \"\",\r\n      });\r\n    } else {\r\n      console.log(\"Empty Object\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"set-employee-form crd\">\r\n      <div style={{ height: \"50px\" }}>\r\n        <p\r\n          className=\"text-color\"\r\n          style={{ textAlign: \"center\", paddingTop: \"0px\", paddingTop: \"10px\" }}\r\n        >\r\n          Update Employee Details\r\n        </p>\r\n        <Link to=\"/monitoring/checkemployees\">\r\n          <button\r\n            className=\"btn btn-inv btn-success btn-sm\"\r\n            style={{ position: \"relative\", left: \"1000px\", top: \"-61px\" }}\r\n          >\r\n            <b>CLOSE</b>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <form style={{ width: \"50%\" }}>\r\n        <div\r\n          className=\"form-row\"\r\n          style={{ width: \"200%\", paddingLeft: \"30px\" }}\r\n        >\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"empId\">Employee ID</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"empId\"\r\n              placeholder=\"Employee ID\"\r\n              name=\"empId\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              value={empDetails.empId}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"fName\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"name\"\r\n              placeholder=\"Full Name\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              value={empDetails.name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label for=\"state\">Email ID</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Email ID\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={empDetails.email}\r\n            />\r\n          </div>\r\n          <div class=\"form-group col-md-3\">\r\n            <label for=\"privilege\">Privilege</label>\r\n            <input\r\n              list=\"privileges\"\r\n              class=\"form-control\"\r\n              id=\"privilege\"\r\n              placeholder=\"Privilege\"\r\n              name=\"privilege\"\r\n              onChange={handleChange}\r\n              value={empDetails.privilege}\r\n            />\r\n            <datalist id=\"privileges\">\r\n              <option value=\"ADMIN\" />\r\n              <option value=\"LIMITED USER\" />\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div style={{ position: \"absolute\", left: \"900px\", bottom: \"34px\" }}>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={handleUpdate}\r\n        >\r\n          UPDATE\r\n        </button>\r\n        <button\r\n          class=\"btn btn-success btn-inv\"\r\n          type=\"submit\"\r\n          onClick={clearForm}\r\n        >\r\n          CLEAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetEmployeeForm;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Options() {\r\n  return (\r\n    <div className=\"options\">\r\n    <Link to=\"/monitoring/checkinventory\" style={{position:\"relative\",width:\"max-content\"}}>\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\" >\r\n          Check Inventory\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/monitoring/updateinventory\">\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\">\r\n          Update Inventory\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/monitoring/generatereport\">\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\">\r\n          Generate Reports\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/monitoring/checkemployees\">\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\">\r\n          Check Employees\r\n        </button>\r\n      </Link>\r\n      <Link to=\"/monitoring/manageemployees\">\r\n        <button class=\"btn btn-success btn-inv\" type=\"submit\">\r\n          Manage Employees\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\nimport VerticalNavbar from \"../components/general-components/VerticalNavbar\";\r\nimport RtdBar from \"../components/monitoring-components/RtdBar\";\r\nimport SearchReportForm from \"../components/monitoring-components/SearchReportForm\";\r\nimport InventoryItemTable from \"../components/monitoring-components/InventoryItemTable\";\r\nimport user from \"../service/serviceLayer\";\r\nimport UpdateForm from \"../components/monitoring-components/UpdateForm\";\r\nimport UserTable from \"../components/monitoring-components/employee-components/UserTable\";\r\nimport SetEmployeeForm from \"../components/monitoring-components/employee-components/SetEmployeeForm\";\r\nimport Options from \"../components/monitoring-components/Options\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction MonitoringPage() {\r\n  useEffect(getRealTimeData, []);\r\n  useEffect(getArrayOfBillingObject, []);\r\n  useEffect(getArrayOfEmpObject, []);\r\n\r\n  const [rtd, setRtd] = useState({\r\n    todaysSale: \"\",\r\n    noOfItemsWithoutSp: \"\",\r\n  });\r\n\r\n  const [arrayOfBillingObject, setArrayOfBillingObject] = useState([]);\r\n  const [arrayOfEmpObject, setArrayOfEmpObject] = useState([]);\r\n\r\n  function getArrayOfBillingObject() {\r\n    user.getArrayOfBillingObject().then((resp) => {\r\n      if (resp.data.status === 1) {\r\n        setArrayOfBillingObject(resp.data.billingObjList);\r\n      }\r\n    });\r\n  }\r\n\r\n  function getArrayOfEmpObject() {\r\n    user.getListOfEmployees().then((resp) => {\r\n      if (resp.data.status === 1) {\r\n        setArrayOfEmpObject(resp.data.empList);\r\n      }\r\n    });\r\n  }\r\n\r\n  function getRealTimeData() {\r\n    user.getRealTimeData().then((resp) => {\r\n      const { totalValueofInvoices, totalNoOfItemsWithoutSp } = resp.data.rtd;\r\n      if (totalValueofInvoices === null && totalNoOfItemsWithoutSp === 0) {\r\n        setRtd({\r\n          todaysSale: \"₹ 0.00\",\r\n          noOfItemsWithoutSp: \"-\",\r\n        });\r\n      } else if (totalValueofInvoices === null) {\r\n        setRtd({\r\n          todaysSale: \"₹ 0.00\",\r\n          noOfItemsWithoutSp: totalNoOfItemsWithoutSp,\r\n        });\r\n      } else if (totalNoOfItemsWithoutSp === 0) {\r\n        setRtd({\r\n          todaysSale: \"₹ \" + totalValueofInvoices,\r\n          noOfItemsWithoutSp: \"-\",\r\n        });\r\n      } else {\r\n        setRtd({\r\n          todaysSale: \"₹ \" + totalValueofInvoices,\r\n          noOfItemsWithoutSp: totalNoOfItemsWithoutSp + \" ITEM(S)\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar />\r\n      <VerticalNavbar />\r\n      <RtdBar\r\n        todaysSale={rtd.todaysSale}\r\n        noOfItemsWithoutSp={rtd.noOfItemsWithoutSp}\r\n      />\r\n\r\n      <Options />\r\n      <Switch>\r\n        <Route path=\"/monitoring/checkinventory\">\r\n          <InventoryItemTable tableRows={arrayOfBillingObject} />\r\n        </Route>\r\n        <Route path=\"/monitoring/updateinventory\">\r\n          <InventoryItemTable tableRows={arrayOfBillingObject} />\r\n          <UpdateForm />\r\n        </Route>\r\n        <Route path=\"/monitoring/generatereport\">\r\n          <SearchReportForm />\r\n        </Route>\r\n        <Route path=\"/monitoring/checkemployees\">\r\n          <UserTable tableRows={arrayOfEmpObject} />\r\n        </Route>\r\n        <Route path=\"/monitoring/manageemployees\">\r\n          <UserTable tableRows={arrayOfEmpObject} />\r\n          <SetEmployeeForm />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonitoringPage;\r\n","import React from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport auth from \"../auth-directory/auth\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction ProtectedRoute({ component: Component, path: path, ...rest }) {\r\n  const history = useHistory();\r\n  if (path === \"/monitoring\") {\r\n    if (auth.isPrivileged()) {\r\n      return (\r\n        <Route\r\n          {...rest}\r\n          render={() => {\r\n            if (auth.isAuthenticated()) {\r\n              return <Component />;\r\n            } else {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      Alert.error(\r\n        \"You do not have administrator rights. Please login as administrator!\"\r\n      );\r\n      return <Redirect to={history.goBack(-1)} />;\r\n      // if (path === \"/inventory\") {\r\n      //   Alert.error(\r\n      //     \"You do not have administrator rights. Please login as administrator!\"\r\n      //   );\r\n      //   return <Redirect to=\"/inventory\" />;\r\n      // } else if (path === \"/billing\") {\r\n      //   Alert.error(\r\n      //     \"You do not have administrator rights. Please login as administrator!\"\r\n      //   );\r\n      //   return <Redirect to=\"/billing\" />;\r\n      // }\r\n    }\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() => {\r\n          if (auth.isAuthenticated()) {\r\n            console.log(\"hello\");\r\n            return <Component />;\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar />\r\n      <img src=\"https://images.unsplash.com/photo-1478760329108-5c3ed9d495a0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1567&q=80\" />\r\n      {/* login\r\n      register */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"../general-components/HorizontalNavbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar />\r\n      <Link to=\"/inventory\">Inventory</Link>\r\n      <hr></hr>\r\n      <Link to=\"/billing\">Billing</Link>\r\n      <hr></hr>\r\n      <Link to=\"/monitoring\">Monitoring</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport Welcome from '../components/login-components/Welcome';\r\n\r\nfunction WelcomePage() {\r\n    return <div>\r\n        <Welcome />\r\n    </div>\r\n}\r\n\r\nexport default WelcomePage;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport user from \"../../service/serviceLayer\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nfunction Register() {\r\n  const [empDetails, setEmpDetails] = useState({\r\n    empId: \"\",\r\n    name:\"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    privilege: \"\",\r\n  });\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setEmpDetails((prevValue) => {\r\n      return { ...prevValue, [name]: value };\r\n    });\r\n    if (name === \"confirmPassword\") {\r\n      setConfirmPassword(value);\r\n    }\r\n  }\r\n\r\n  function handleRegister() {\r\n    if (\r\n      empDetails.name !== \"\" &&\r\n      empDetails.email !== \"\" &&\r\n      empDetails.password !== \"\" &&\r\n      confirmPassword !== \"\"\r\n    ) {\r\n      if (confirmPassword === empDetails.password) {\r\n        user.registerEmployee(empDetails).then((resp) => {\r\n          const { status, reason } = resp.data;\r\n          console.log(status);\r\n          console.log(reason);\r\n        });\r\n        setEmpDetails({\r\n          empId: \"\",\r\n          name:\"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          privilege: \"\",\r\n        });\r\n        setConfirmPassword(\"\");\r\n      } else {\r\n        Alert.error(\"Passwords don't match!\");\r\n      }\r\n    } else {\r\n      Alert.error(\"All fields are required!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"form\">\r\n        <h3 style={{ fontFamily: \"merriWeather\", color: \"#2A9D8F\" }}>\r\n          Register\r\n        </h3>\r\n        <form className=\"login-form\">\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={empDetails.name}\r\n          />\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"email\"\r\n            placeholder=\"Email ID\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={empDetails.email}\r\n          />\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={empDetails.password}\r\n          />\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            onChange={handleChange}\r\n            value={confirmPassword}\r\n          />\r\n        </form>\r\n        <button onClick={handleRegister}>register</button>\r\n        <br></br>\r\n        <br></br>\r\n        <p>\r\n          Already registered?\r\n          <Link to=\"/login\"> Login</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"../components/general-components/HorizontalNavbar\";\r\nimport Register from \"../components/login-components/Register\";\r\n\r\nfunction RegisterPage() {\r\n  return (\r\n    <div>\r\n      <HorizontalNavbar />\r\n      <Register />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport PageNotFound from \"../pages/404Page\";\r\nimport TestForm from \"./poc-components/TestForm\";\r\nimport \"../styles.css\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport InventoryPage from \"../pages/InventoryPage\";\r\nimport BillingPage from \"../pages/BillingPage\";\r\nimport LogoutPage from \"../pages/LogoutPage\";\r\nimport MonitoringPage from \"../pages/MonitoringPage\";\r\nimport ProtectedRoute from \"../auth-directory/ProtectedRoute\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport WelcomePage from \"../pages/WelcomePage\";\r\nimport Alert from \"react-s-alert\";\r\nimport \"react-s-alert/dist/s-alert-default.css\";\r\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\r\nimport RegisterPage from \"../pages/RegisterPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path=\"/register\" component={RegisterPage} />\r\n          <ProtectedRoute exact path=\"/welcome\" component={WelcomePage} />\r\n          <ProtectedRoute exact path=\"/inventory\" component={InventoryPage} />\r\n          <ProtectedRoute exact path=\"/billing\" component={BillingPage} />\r\n          <ProtectedRoute exact path=\"/monitoring\" component={MonitoringPage} />\r\n          <ProtectedRoute exact path=\"/monitoring/checkinventory\" component={MonitoringPage} />\r\n          <ProtectedRoute exact path=\"/monitoring/updateinventory\" component={MonitoringPage} />\r\n          <ProtectedRoute exact path=\"/monitoring/generatereport\" component={MonitoringPage} />\r\n          <ProtectedRoute exact path=\"/monitoring/checkemployees\" component={MonitoringPage} />\r\n          <ProtectedRoute exact path=\"/monitoring/manageemployees\" component={MonitoringPage} />\r\n          <Route exact path=\"/logout\" component={LogoutPage} />\r\n          <ProtectedRoute exact path=\"/test\" component={TestForm} />\r\n          <Route exact path=\"/404\" component={PageNotFound} />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </Router>\r\n\r\n      <Alert\r\n        stack={{ limit: 3 }}\r\n        timeout={3000}\r\n        position=\"top-right\"\r\n        effect=\"slide\"\r\n        offset={65}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}